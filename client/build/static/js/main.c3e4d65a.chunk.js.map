{"version":3,"sources":["pages/MainPage/Components/Content/ComponentsByContent/CreateTasksComponents/AddTask/AddTask.module.css","pages/MainPage/Components/Header/header.module.css","pages/MainPage/Components/Content/ComponentsByContent/HistoryTasksComponents/HistoryComponents/History.module.css","pages/MainPage/Components/Modal/Modal.module.css","pages/MainPage/Components/Content/ComponentsByContent/CreateTasksComponents/SetAutomobileComponent/SetCar.module.css","pages/MainPage/Components/Content/ComponentsByContent/CreateTasksComponents/CreateTask.module.css","pages/MainPage/Components/Loader/Loader.module.css","pages/MainPage/Components/Content/ErorrPage/ErrorPage.module.css","pages/MainPage/Components/Content/ComponentsByContent/CreateTasksComponents/TaskTypeButton/TaskTypeButton.module.css","pages/MainPage/Components/Content/ComponentsByContent/CreateTasksComponents/TaskTypeMenu/TaskTypeMenu.module.css","pages/MainPage/Components/Content/ComponentsByContent/CreateTasksComponents/DoneButton/DoneButton.module.css","pages/MainPage/Components/Content/ComponentsByContent/HistoryTasksComponents/HistoryModal/HistoryModal.module.css","pages/MainPage/Components/Content/ComponentsByContent/HistoryTasksComponents/HistoryWeekInfoModal/HistoryWeekInfoModal.module.css","pages/MainPage/Components/Content/ComponentsByContent/MainPageTasksComponents/MainPage.module.css","pages/AuthPage/AuthPage.js","store/actions/localStorageActions.js","store/actionTypes.js","utils/API.js","configs/config.js","store/actions/tasksActions.js","store/actions/requestState.js","store/actions/automobileActions.js","store/actions/historyModalChangeActions.js","store/actions/userAcions.js","store/actions/historyModalWeekDetails.js","pages/AuthPage/AuthContainer.js","store/actions/authActions.js","pages/MainPage/Components/Header/Header.js","pages/MainPage/Components/Header/HeaderContainer.js","pages/MainPage/Components/Content/ContentContainer.js","pages/MainPage/Components/Content/Content.js","pages/MainPage/Components/Content/ComponentsByContent/CreateTasksComponents/AddTask/AddTasksComponent.js","pages/MainPage/Components/Content/ErorrPage/ErrorPage.js","pages/MainPage/Components/Content/ComponentsByContent/CreateTasksComponents/AddTask/GlobalTasksContainer.js","pages/MainPage/Components/Content/ComponentsByContent/CreateTasksComponents/AddTask/ChassisContainer.js","pages/MainPage/Components/Content/ComponentsByContent/CreateTasksComponents/AddTask/EngineContainer.js","pages/MainPage/Components/Content/ComponentsByContent/CreateTasksComponents/AddTask/TransmissionContainer.js","pages/MainPage/Components/Content/ComponentsByContent/CreateTasksComponents/TaskTypeButton/TaskTypeButton.js","pages/MainPage/Components/Content/ComponentsByContent/CreateTasksComponents/TaskTypeButton/TaskTypeButtonContainer.js","store/actions/commonActions.js","pages/MainPage/Components/Content/ComponentsByContent/CreateTasksComponents/TaskTypeMenu/TaskTypeMenu.js","pages/MainPage/Components/Loader/Loader.js","pages/MainPage/Components/Content/ComponentsByContent/CreateTasksComponents/SetAutomobileComponent/SetCar.js","pages/MainPage/Components/Content/ComponentsByContent/CreateTasksComponents/SetAutomobileComponent/SetCarContainer.js","pages/MainPage/Components/Modal/Modal.js","pages/MainPage/Components/Modal/ModalContainer.js","pages/MainPage/Components/Content/ComponentsByContent/CreateTasksComponents/DoneButton/DoneButton.js","pages/MainPage/Components/Content/ComponentsByContent/CreateTasksComponents/DoneButton/DoneButtonContainer.js","pages/MainPage/Components/Content/ComponentsByContent/CreateTasksComponents/CreateTaskMainComponent.js","pages/MainPage/Components/Content/ComponentsByContent/CreateTasksComponents/CreateTaskContainer.js","pages/MainPage/Components/Content/ComponentsByContent/HistoryTasksComponents/HistoryComponents/HistoryByDay/HistoryItem.js","store/reducers/taskHandling.js","pages/MainPage/Components/Content/ComponentsByContent/HistoryTasksComponents/HistoryComponents/HistoryByDay/History.js","utils/constants.js","pages/MainPage/Components/Content/ComponentsByContent/HistoryTasksComponents/HistoryComponents/HistoryByWeek/HistoryWeekItems.js","pages/MainPage/Components/Content/ComponentsByContent/HistoryTasksComponents/HistoryComponents/HistoryByWeek/HistoryByWeek.js","pages/MainPage/Components/Content/ComponentsByContent/HistoryTasksComponents/HistoryComponents/HistoryByMonth/HistoryByMonth.js","pages/MainPage/Components/Content/ComponentsByContent/HistoryTasksComponents/HistoryModal/HistoryModal.js","pages/MainPage/Components/Content/ComponentsByContent/HistoryTasksComponents/HistoryModal/HistoryModalContainer.js","pages/MainPage/Components/Content/ComponentsByContent/HistoryTasksComponents/HistoryWeekInfoModal/CarsByWeekComponent.js","pages/MainPage/Components/Content/ComponentsByContent/HistoryTasksComponents/HistoryWeekInfoModal/HistoryWeekInfoModal.js","pages/MainPage/Components/Content/ComponentsByContent/HistoryTasksComponents/HistoryWeekInfoModal/HistoryWeekInfoModalContainer.js","pages/MainPage/Components/Content/ComponentsByContent/HistoryTasksComponents/HistoryComponents/HistoryNavBar.js","pages/MainPage/Components/Content/ComponentsByContent/HistoryTasksComponents/HistoryComponents/HistoryComponent.js","pages/MainPage/Components/Content/ComponentsByContent/HistoryTasksComponents/HistoryContainer.js","pages/MainPage/Components/Content/ComponentsByContent/MainPageTasksComponents/MainPageModal.js","pages/MainPage/Components/Content/ComponentsByContent/MainPageTasksComponents/MainPageModalContainer.js","pages/MainPage/Components/Content/ComponentsByContent/MainPageTasksComponents/MainPage.js","pages/MainPage/Components/Content/ComponentsByContent/MainPageTasksComponents/MainPageContainer.js","routes/routes.js","routes/RouterContainer.js","store/reducers/authHandling.js","store/reducers/automobileListHandling.js","store/reducers/commonHandlings.js","store/reducers/historyModalHandling.js","store/reducers/historyHandling.js","store/reducers/userHandling.js","store/reducers/historyWeekInfoModal.js","store/index.js","App.js","index.js"],"names":["module","exports","AuthPage","props","formHandler","loginHandler","registrationHandler","isFetching","message","useState","showModal","setModal","className","onSubmit","e","preventDefault","key","formHadler","placeholder","id","type","name","onChange","disabled","onClick","saveToLocalStorage","tokenAndUserId","payload","httpRequest","axios","create","baseURL","method","headers","localStorage","getItem","setTaskForChange","taskForChange","setTaskOptions","options","historyFetching","isFetch","settingTaskList","dispatch","get","then","res","data","catch","err","sendingChoosedTasks","tasks","task","post","console","log","getTasks","param","getTasksAPI","finally","getTaskById","getTaskByIdAPI","setMarkList","mark","setUpdateResp","updateTask","put","updateTaskAPI","deleteTask","delete","deleteTaskAPI","rej","userFetching","bool","gettingUserInfo","user","changingUserInfo","idAndData","setHistoryDatails","detail","settingHistoryDetails","dayRange","getWorkDaysPerRange","info","connect","state","auth","loginStore","formData","email","password","token","registration","error","paymentRange","form","setForm","target","value","prop","Header","location","includePathHandler","stl","header","nav","to","navItem","pathname","navCheck","logout","useLocation","path","search","includes","setTaskList","useEffect","children","AddTaskComponent","componentsList","checkboxHandler","radioHandler","costHandler","push","typeOfSystem","area","map","item","title","content","TitleComponent","isOpen","setOpen","stickyTitle","listItem","showBtn","sides","cost","ContentComponent","calcSidesLength","length","side","subSides","flat","filter","undefined","subItem","isChecked","filterItem","list","listComponent","checkboxContainer","sideId","defaultValue","buttonBlock","style","background","checkAll","forEach","uncheckAll","ContentCheckBoxes","v4","isSubSides","checked","checkBox","radio","label","htmlFor","clear","clearRadio","subList","ErrorPage","errorContainer","Global","typeOfMainSystem","mainTypeSystem","values","changeHandlerStore","mainSystem","chassis","changeChassisInStore","engine","changeEngineInStore","transmission","changeTransmissionInStore","TaskTypeButton","match","useRouteMatch","url","setTopSideName","button","setTaskMenuTitle","TaskTypeMenu","taskTypes","typeTaskList","Loader","size","container","text","loader","SetCar","getModel","models","cars","setMark","setModel","checkedMark","checkedModel","input1","useRef","input2","clearInput","numb","current","wrapper","ref","setCar","join","model","store","autoList","marks","automobiles","modelList","currentMark","getAutos","resp","settingMark","some","checkMark","Modal","okButton","noButton","description","bg","fade_In","fade_In_Out","modal","modalBtnContainer","modalBtn","DoneButton","saveTasksToServer","isShowModal","hideModal","messageForModal","descriptionforModal","btn","allTasks","global","isShowModalGlob","descriptionForModal","choosedTasks","choosedCar","setChoosed","sendChoosedTask","mesage","reinitTaskList","delTask","sumCost","sumTaskCount","isSent","setSent","onlyCheckedTasks","isEmptyObj","obj","recurseRoundAllTasks","Array","isArray","notRecurse","i","x","reduce","accum","names","canBeHideTitle","subWork","subSubItem","nameItem","totalCost","totalTaskCount","electrical","CreateTaskMainComponent","topContainer","isExact","linkBack","marginRight","topSideTitle","exact","taskMenuTitle","HistoryItem","taskItem","isEdit","editHandler","liItem","handlers","inputDescription","taskType","setTitle","sideTitle","addSide","newId","mainI","Fragment","sideWrapper","taskName","setSide","delSide","addSubwork","nameId","subWorkContainer","subI","taskSubItem","inputTaskSubItem","setSubWork","delSubWork","taskCost","setCost","initState","doneTasks","History","getRequestType","date","_id","taskDate","moment","ISO_8601","format","titleContainer","btnChange","HistoryDayMapping","WeekItems","checkFirstDay","days","firstDay","fItem","OneWeek","dayRangePerWeek","lastDay","add","dateItemWeek","weekWeek","dateItem","day","WeekDay","today","border","dayWeek","haveBeenTasks","checkedDay","todayDay","fontSize","HistoryByWeek","arr","dateRange","first","last","Week","HistoryByMonth","HistoryModal","setShowModal","clearTaskForChange","costNav","backgroundColor","addTask","historyModal","zeroOut","setHistTitle","setHistCOst","setHistMark","setHistModel","setHistSide","setHistSubWork","setHistTask","addHistSide","delHistSubwork","delHistSide","delHistTask","taskAndId","CarsByWeek","isShowAllCars","setCars","weekListItem","infoItemContanier","profit","carsCount","allCarsContainer","carList","car","trim","HistoryWeekDetailsModal","setHistDetail","isShowDetails","setShowDetails","sumCostByWeek","percent","symbol","withUserPercent","mVCar","mostProfitCarName","mostProfitCarCost","mostProfitCarWithPercent","detailBtn","topCarTasks","mostProfitCarTasks","weekInfo","det","HistoryNavBar","timeType","navBar","navBarLink","navBarChecked","HistoryComponent","flag","setFlag","setTimeType","HistoryAllocater","useParams","history","haveBeenChanged","updatedTask","isFetchingHistoryPage","details","reqFlag","setReqFlag","MainPageModal","isShowPassInputs","setShowInputs","comparePass","pass","pass1","pass2","display","flexDirection","modalContainer","workplaceName","changeUserInfo","percentLevel","passContainer","passWord","wrongNewPass","compPass","btnBlock","modalCloseBtn","closeModal","saveNewInfo","setPass","Epass","MainPage","userInfo","infoContainer","infoItem","getUserInfo","Router","hideAuth","ContentContainer","isShowInfoModal","logoutMessage","infoMessage","okHandler","isModal","modalMsg","infoShow","saveToLocalStor","logoutShowModal","logoutModal","logoutHideModal","infoModal","infoCloseModal","interceptors","request","use","cfg","Authorization","Promise","reject","response","resolve","setTimeout","status","userId","paymentDay","combineReducers","action","setItem","removeItem","window","reload","chassisTasksGlobal","engineTasksGlobal","transmissionTasksGlobal","typeSystem","isSubsSides","isRadio","radioItem","acc","swItem","tItem","createStore","reducer","composeWithDevTools","applyMiddleware","thunk","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c3e4d65a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonBlock\":\"AddTask_buttonBlock__2pqcj\",\"title\":\"AddTask_title__2rkr9\",\"stickyTitle\":\"AddTask_stickyTitle__1NNEw\",\"listTitle\":\"AddTask_listTitle__2t9UH\",\"label\":\"AddTask_label__1-FzE\",\"cost\":\"AddTask_cost__2_Nxa\",\"checkboxContainer\":\"AddTask_checkboxContainer__1oHYx\",\"list\":\"AddTask_list__2s6ay\",\"checkAll\":\"AddTask_checkAll__b61Zq\",\"uncheckAll\":\"AddTask_uncheckAll__3ZLiR\",\"subList\":\"AddTask_subList__3MeI4\",\"listComponent\":\"AddTask_listComponent__1TOjM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__15N8U\",\"nav\":\"header_nav__VsnCG\",\"navItem\":\"header_navItem__1CySM\",\"navCheck\":\"header_navCheck__1sNZ9\",\"checkGlassAnimation\":\"header_checkGlassAnimation__30vOl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"taskItem\":\"History_taskItem__-qebh\",\"taskList\":\"History_taskList__3SXIm\",\"listItem\":\"History_listItem__3zl6d\",\"taskType\":\"History_taskType__1i1WV\",\"taskSubItem\":\"History_taskSubItem__2LD2Z\",\"inputTaskSubItem\":\"History_inputTaskSubItem__1Ll8D\",\"inputDescription\":\"History_inputDescription__3g5nS\",\"subWorkContainer\":\"History_subWorkContainer__8Ke-S\",\"sideTitle\":\"History_sideTitle__2MwYO\",\"taskDate\":\"History_taskDate__3lqQe\",\"taskCost\":\"History_taskCost__2OLIy\",\"taskName\":\"History_taskName__3n9DL\",\"liItem\":\"History_liItem__qn9Tc\",\"mark\":\"History_mark__ev4qJ\",\"titleContainer\":\"History_titleContainer__nv8Ey\",\"subWork\":\"History_subWork__1d0A2\",\"btnChange\":\"History_btnChange__1pjcu\",\"dateItemWeek\":\"History_dateItemWeek__20obP\",\"weekWeek\":\"History_weekWeek__tXyrw\",\"dayWeek\":\"History_dayWeek__1wqfD\",\"checkedDay\":\"History_checkedDay__2IiZF\",\"todayDay\":\"History_todayDay__g_9wz\",\"navBar\":\"History_navBar__20-3Y\",\"navBarChecked\":\"History_navBarChecked__2A_wE\",\"navBarLink\":\"History_navBarLink__n13vb\",\"btn\":\"History_btn__9sb9f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"Modal_modal__BYz4C\",\"title\":\"Modal_title__3dU2Y\",\"content\":\"Modal_content__38knT\",\"modalBtnContainer\":\"Modal_modalBtnContainer__2Gjq9\",\"modalBtn\":\"Modal_modalBtn__2kgup\",\"bg\":\"Modal_bg__8et5g\",\"fade_In_Out\":\"Modal_fade_In_Out__VK4jc\",\"fade-In-Out\":\"Modal_fade-In-Out__3r_CO\",\"fade_In\":\"Modal_fade_In__2pa_u\",\"fade-in\":\"Modal_fade-in__2zP7c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"setCar\":\"SetCar_setCar__1t80k\",\"form\":\"SetCar_form__oM7AV\",\"button\":\"SetCar_button__gpo0G\",\"wrapper\":\"SetCar_wrapper__2YqTr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CreateTask_container__2YzXn\",\"linkBack\":\"CreateTask_linkBack__1LgyM\",\"topContainer\":\"CreateTask_topContainer__AVN4_\",\"btn\":\"CreateTask_btn__18Dbd\",\"topSideTitle\":\"CreateTask_topSideTitle__1BYtP\",\"titlePulse\":\"CreateTask_titlePulse__3W9NM\",\"moveBg\":\"CreateTask_moveBg__1qWpl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Loader_container__94nYO\",\"s\":\"Loader_s__1relL\",\"m\":\"Loader_m__3iuF8\",\"l\":\"Loader_l__1gmja\",\"text\":\"Loader_text__7mT8z\",\"loader\":\"Loader_loader__31CJO\",\"rotate\":\"Loader_rotate__3EXwP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorContainer\":\"ErrorPage_errorContainer__2MUSG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"TaskTypeButton_button__1ZaX1\",\"pulseBtn\":\"TaskTypeButton_pulseBtn__3zvKm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"typeTaskList\":\"TaskTypeMenu_typeTaskList__2B64F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnCount\":\"DoneButton_btnCount__1XD7z\",\"btn\":\"DoneButton_btn__1cVR6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalContainer\":\"HistoryModal_modalContainer__3U14A\",\"headNav\":\"HistoryModal_headNav__2SbOk\",\"costNav\":\"HistoryModal_costNav__1Fq-b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mVCar\":\"HistoryWeekInfoModal_mVCar__3VQZa\",\"profit\":\"HistoryWeekInfoModal_profit__h5BC3\",\"weekListItem\":\"HistoryWeekInfoModal_weekListItem__baNjw\",\"infoItemContanier\":\"HistoryWeekInfoModal_infoItemContanier__n9ywj\",\"percent\":\"HistoryWeekInfoModal_percent__hehfy\",\"symbol\":\"HistoryWeekInfoModal_symbol__17fXt\",\"detailBtn\":\"HistoryWeekInfoModal_detailBtn__1mlvc\",\"topCarTasks\":\"HistoryWeekInfoModal_topCarTasks__3nnNI\",\"allCarsContainer\":\"HistoryWeekInfoModal_allCarsContainer__38KAZ\",\"carList\":\"HistoryWeekInfoModal_carList__1CJUR\",\"mark\":\"HistoryWeekInfoModal_mark__1oaE8\",\"date\":\"HistoryWeekInfoModal_date__3mrWc\",\"cost\":\"HistoryWeekInfoModal_cost__1fhAq\",\"listItem\":\"HistoryWeekInfoModal_listItem__sEZmI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"MainPage_container__2I-ug\",\"infoItem\":\"MainPage_infoItem__noqmK\",\"modalContainer\":\"MainPage_modalContainer__Mm8NA\",\"modalButton\":\"MainPage_modalButton__22zYx\",\"modalCloseBtn\":\"MainPage_modalCloseBtn__2Yx-y\",\"btnBlock\":\"MainPage_btnBlock__2qfFS\",\"title\":\"MainPage_title__1LbXe\",\"passContainer\":\"MainPage_passContainer__PW6ij\",\"wrongNewPass\":\"MainPage_wrongNewPass__2jEF1\"};","import React, { useState } from 'react';\nimport \"./Auth.css\";\n\n\nexport const AuthPage = (props) => {\n    const { formHandler, loginHandler, registrationHandler } = props;\n    const { isFetching, message } = props;\n\n    const [showModal, setModal] = useState(false)\n\n    const formHadler = (e) => {\n        e.preventDefault();\n        if (e.key === 'Enter') {\n            loginHandler()\n        }\n    }\n\n    return (\n        <div className='form-wrapper'>\n            <form\n                onSubmit={e => formHadler(e)}\n                className='auth-form '>\n                    <span></span>\n                <input\n                    className={'authInput'}\n                    placeholder={'Емейл'}\n                    id='mail'\n                    type='email'\n                    name='email'\n                    onChange={formHandler}\n                />\n                <span></span>\n                <input\n                    className={'authInput'}\n                    placeholder={'Пароль'}\n                    id={'pass'}\n                    type='password'\n                    name={'password'}\n                    onChange={formHandler}\n                />\n                <div className='button-wrapper'>\n                    <button\n                        className='login-btn'\n                        disabled={isFetching}\n                        onClick={loginHandler}\n                    >\n                        Вход\n                </button>\n                    <button\n                        className='reg-btn'\n                        disabled={isFetching}\n                        onClick={() => setModal(true)}\n                    >\n                        Регистрация\n                </button>\n                </div>\n            </form>\n            <pre className='message'>{message}</pre>\n\n            {\n                showModal\n                &&\n                <div className={'regModalBackground'}>\n\n\n\n                    <div className={'regModal'}>\n\n                        <button\n                            className='closeModal'\n                            onClick={() => setModal(false)}\n                        >\n                            x\n                    </button>\n                        <span>Е-мейл</span>\n                        <input\n                            className={'authInput'}\n                            id='mail'\n                            type='email'\n                            name='email'\n                            onChange={formHandler}\n                            placeholder='email'\n                        />\n                        <span>Пароль</span>\n                        <input\n                            className={'authInput'}\n                            id={'pass'}\n                            type='password'\n                            name={'password'}\n                            onChange={formHandler}\n                            placeholder='password'\n                        />\n                        <span>Название СТО</span>\n                        <input\n                            type='text'\n                            name='workplaceName'\n                            className={'authInput'}\n                            onChange={formHandler}\n                            placeholder='Рога и копыта'\n                        />\n                        <span>Процент от работ(числом)</span>\n                        <input\n                            type='number'\n                            name='percentLevel'\n                            className={'authInput'}\n                            onChange={formHandler}\n                            placeholder='40% 50% 60%'\n                        />\n                        <span>День выплат(номер дня недели)</span>\n                        <input\n                            type='number'\n                            name='paymentDay'\n                            className={'authInput'}\n                            onChange={formHandler}\n                            placeholder='4 5 6'\n                        />\n\n                        <span>Выплантая неделя</span>\n                        <select\n                            type='select'\n                            name='paymentRange'\n                            className={'authInput'}\n                            onChange={formHandler}\n                            \n                        >\n                            <option name={'пн'}>пн-сб</option>\n                            <option name={'вт'}>вт-пн</option>\n                            <option name={'ср'}>ср-вт</option>\n                            <option name={'чт'}>чт-ср</option>\n                            <option name={'пт'}>пт-чт</option>\n                            <option name={'сб'}>сб-пн</option>\n\n                        </select>\n                        <button\n                            className='reg-btn'\n                            disabled={isFetching}\n                            onClick={() => { registrationHandler(); setModal(false) }}\n                        >\n                            Зарегистрироваться\n                        </button>\n\n\n                    </div>\n\n                </div>\n            }\n        </div>\n\n\n    )\n}","import {SAVE_LOCAL_STORAGE} from '../actionTypes'\n\nexport const saveToLocalStorage = tokenAndUserId => ({type: SAVE_LOCAL_STORAGE, payload:{tokenAndUserId}});","export const SET_TOKEN = 'SET_TOKEN';\nexport const DELETE_TOKEN = 'DELETE_TOKEN';\n\nexport const SHOW_MODAL_LOGOUT = 'SHOW_MODAL_LOGOUT';\nexport const HIDE_MODAL_LOGOUT = 'HIDE_MODAL_LOGOUT';\n\nexport const SHOW_MODAL_INFO = 'SHOW_MODAL_INFO';\nexport const HIDE_MODAL_INFO = 'HIDE_MODAL_INFO';\n\nexport const SHOW_MODAL_GLOB = 'SHOW_MODAL_GLOBAL';\nexport const HIDE_MODAL_GLOB = 'HIDE_MODAL_GLOBAL';\n\nexport const START_REQUEST = 'START_REQUEST';\nexport const END_REQUEST = 'END_REQUEST';\nexport const ERROR_REQUEST = 'ERROR_REQUEST';\nexport const REGISTRATION_SUCCESSFULL = 'REGISTER'; \nexport const REGISTRATION_FAILURE = 'REGISTER_FAIL'; \n\nexport const SAVE_LOCAL_STORAGE = 'SAVE_LOCAL_STORAGE';\n\nexport const SET_INIT_TASKLIST = 'SET_TASKlIST'; \nexport const SET_TASK_OPTIONS = 'SET_TASK_OPTIONS';\nexport const SET_TASK_FOR_CHANGE = 'SET_TASK_FOR_CHANGE';\n\nexport const SET_MARK_OF_AUTO_LIST = 'SET_AUTOS_LIST';\nexport const SET_MODEL_BY_MARK = 'SET_MARK';\nexport const SET_CURRENT_MODEL = 'SET_CURRENT_MODEL'\nexport const SET_CURRENT_MARK = 'SET_CURRENT_MARK'\n\nexport const SET_FINAL_TASK = 'SET_FINAL_TASK';\n\nexport const SEND_FINAL_TASKS = 'SEND_FINAL_TASKS';\n\nexport const GET_DONE_TASKS = 'GET_DONE_TASKS';\n\n///HISTORY_Modal\n\nexport const H_SET_MARK = 'H_SET_MARK';\nexport const H_SET_MODEL = 'H_SET_MODEL';\nexport const H_SET_DATE = 'H_SET_DATE';\nexport const H_SET_TITLE = 'H_SET_TITLE';\nexport const H_SET_COST = 'H_SET_COST';\nexport const H_SET_SIDE = 'H_SET_SIDE';\nexport const H_SET_SUBWORK = 'H_SET_SUBWORK';\nexport const H_ADD_TASK = 'H_ADD_TASK'; \nexport const H_ADD_SUBWORK = 'H_ADD_SUBWORK';\nexport const H_ADD_SIDE = 'H_ADD_SIDE';\nexport const H_DELETE_SUBWORK = 'H_DELETE_SUBWORK';\nexport const H_DELETE_TASK = 'H_DELETE_TASK';\nexport const H_DELETE_SIDE = 'H_DELETE_SIDE';\nexport const H_DELETE_ORDER = 'H_DELETE_ORDER';\nexport const H_UPDATE_RESP = 'H_UPDATE_RESP';\nexport const H_SET_FETCHING = 'SET_FETCHING_HISTORY';\n\nexport const H_D_SET_DETAILS = 'H_D_SET_DETAILS';\n\n//USER\nexport const GET_USER_INFO = 'GET_USER_INFO';\nexport const USER_FETCHING = 'USER_FETCHING';\nexport const SET_UPDATED_USER_INFO = 'SET_UPDATED_USER_INFO'\n\n//COMMON \n\nexport const SET_TASK_MENU_TITLE = 'SET_TASK_MENU_TITLE';","import axios from 'axios';\nimport { localStorageToken } from '../configs/config'\n\n// const token  = localStorage.getItem(localStorageToken)\n\n\nexport const httpRequest = axios.create({\n        baseURL: '/api',\n        method:'get',\n        headers:{\n            'Authorization': `Bearer ${ localStorage.getItem(localStorageToken)}`\n        },\n\n    });\n\n\n\nexport const getInitTasksAPI = () => httpRequest.get('/task/init')\n\nexport const createTaskAPI = task => httpRequest.post('/task/createTask',{ data: task,})\n\nexport const getTasksAPI = param => httpRequest.post('/task/getTask',{ data:param })\n\nexport const deleteTaskAPI = id => httpRequest.delete('/task/delTask',{ data: id, })\n\nexport const updateTaskAPI = task => httpRequest.put('/task/updateTask', { data: task })\n\nexport const getTaskByIdAPI = id => httpRequest.post('/task/getTaskById', {data: id})\n\nexport const getUserInfo = id => httpRequest.post('/user/getUserInfo', {data: id})\n\nexport const updateUserInfo = idAndData => httpRequest.put('/user/updateUserInfo', {data: idAndData});\n\nexport const getWorkDaysPerRange = dayRange => httpRequest.post('/task/getDetailsPerRange', { data: dayRange })","export const localStorageToken = 'locStorToken';\nexport const localStorageUserId = 'locStorUserId';","import { \n    SET_INIT_TASKLIST,\n    SET_TASK_OPTIONS,\n    SET_FINAL_TASK,\n    SEND_FINAL_TASKS,\n    GET_DONE_TASKS,\n    SET_TASK_FOR_CHANGE,\n    H_SET_FETCHING\n} from '../actionTypes';\n\n\nimport {\n    createTaskAPI,\n    getTasksAPI,\n    getInitTasksAPI,\n    getTaskByIdAPI\n} from '../../utils/API'\n\nimport {endRequest, startRequest, setError} from './requestState'\n\nconst setTaskList = tasks => ({type:SET_INIT_TASKLIST, payload: tasks});\n\nconst setDoneTasks = doneTasks => ({type: GET_DONE_TASKS, payload: doneTasks});\n\nexport const setTaskForChange = taskForChange => ({type: SET_TASK_FOR_CHANGE, payload: taskForChange})\n\n\nexport const setTaskOptions = options => ({type: SET_TASK_OPTIONS, payload: options})\n\nconst historyFetching = isFetch => ({type: H_SET_FETCHING, payload: isFetch})\n\nexport const settingTaskList = () => {\n    return dispatch => {\n\n        dispatch( startRequest() );\n        \n        getInitTasksAPI()\n        .then( res=>{\n            dispatch( setTaskList(res.data) );\n            dispatch( endRequest() );\n        })\n        .catch(err=>{\n            dispatch( setError() )\n            dispatch( endRequest() );\n        });\n    }\n}\n\nexport const setChoosedTasks = tasks => ({type:SET_FINAL_TASK, payload: tasks});\n\n\nexport const sendingChoosedTasks = (tasks) => {\n    return dispatch => {\n        createTaskAPI(tasks)\n        .then((res=>{\n            console.log(res)\n        }))\n\n    }\n}\n\nexport const getTasks = (param) => {\n    return dispatch => {\n        dispatch(historyFetching(true))\n        getTasksAPI(param)\n        .then((res=>{\n            dispatch(setDoneTasks(res.data))\n            dispatch(historyFetching(false))\n\n        }))\n        .catch(e=>dispatch(historyFetching(false)))\n        .finally(()=>dispatch(historyFetching(false)))\n    }\n}\n\n\n\n\nexport const getTaskById = id => {\n    return dispatch => {\n        getTaskByIdAPI(id)\n        .then(res => dispatch(setTaskForChange(res.data)))\n    }\n}\n\n","import {\n    START_REQUEST,\n    END_REQUEST,\n    ERROR_REQUEST,\n} from '../actionTypes';\n\nexport const startRequest = () => ({type: START_REQUEST});\nexport const endRequest = () => ({type: END_REQUEST});\nexport const setError = () => ({type:ERROR_REQUEST});","import axios from 'axios';\nimport { startRequest, endRequest, setError } from '../actions/requestState';\n\nimport { SET_MARK_OF_AUTO_LIST, SET_MODEL_BY_MARK,SET_CURRENT_MARK, SET_CURRENT_MODEL } from '../actionTypes';\n\n\nconst setAutomobileList = autos => ({type: SET_MARK_OF_AUTO_LIST, payload: autos});\nconst setMarkList = mark => ({type: SET_MODEL_BY_MARK, payload: mark});\n\nexport const setMark = mark => ({type: SET_CURRENT_MARK, payload:mark})\nexport const setModel = model => ({type: SET_CURRENT_MODEL, payload:model})\n\nexport const settingAutomobileList = () => {\n    return dispatch => {\n        axios.get('/auto/autoMarks')\n        .then(resp=>{\n            dispatch( startRequest() )\n            dispatch( setAutomobileList(resp.data.message) )  \n            dispatch( endRequest() )\n        })\n    }\n}\n\nexport const settingMark = model => {\n    return dispatch => {\n        dispatch( startRequest() )\n        axios.post('/auto/autoModels',{\n            mark: model\n        })\n        .then(resp=>{\n            dispatch( setMarkList(resp.data.message) );\n            dispatch( endRequest() )\n        })\n        .catch(err=>{\n            dispatch( setMarkList('Ошибка') );\n        })\n    }\n}\n","import { \n    H_SET_COST,\n    H_SET_DATE,\n    H_SET_MARK,\n    H_SET_MODEL,\n    H_SET_SIDE,\n    H_SET_TITLE,\n    H_SET_SUBWORK,\n    H_ADD_TASK,\n    H_ADD_SUBWORK,\n    H_ADD_SIDE,\n    H_DELETE_SUBWORK,\n    H_DELETE_TASK,\n    H_DELETE_SIDE,\n    H_UPDATE_RESP,\n    H_DELETE_ORDER\n} from '../actionTypes';\n\n   \n    import { updateTaskAPI, deleteTaskAPI, } from '../../utils/API';\n\n\nexport const setHistSubWork = subWork => ({ type: H_SET_SUBWORK, payload: subWork })\n\nexport const setHistSide = side => ({type: H_SET_SIDE, payload: side});\n\nexport const setHistDate = date => ({ type: H_SET_DATE, payload: date });\n\nexport const setHistMark = mark => ({ type: H_SET_MARK, payload: mark });\n\nexport const setHistTitle = title => ({ type: H_SET_TITLE, payload: title });\n\nexport const setHistModel = model => ({ type: H_SET_MODEL, payload: model });\n\nexport const setHistCOst = cost => ({ type: H_SET_COST, payload: cost });\n\nexport const setHistTask = id => ({ type: H_ADD_TASK, payload: id });\n\nexport const addHistSubWork = subW => ({type: H_ADD_SUBWORK, payload: subW });\n\nexport const delHistSubwork = id => ({type: H_DELETE_SUBWORK, payload: id});\n\nexport const delHistTask = id => ({type: H_DELETE_TASK, payload: id});\n\nexport const addHistSide = id => ({type: H_ADD_SIDE, payload: id});\n\nexport const delHistSide = id => ({type: H_DELETE_SIDE, payload:id});\n\nconst setUpdateResp = res => ({type:H_UPDATE_RESP, payload: res});\n\n\n\nexport const updateTask = task => {\n    return dispatch => {\n        updateTaskAPI(task)\n        .then(res => dispatch(setUpdateResp(res.data)))\n    }\n}\n\n\nexport const deleteTask = (id) => {\n    return dispatch => {\n        deleteTaskAPI(id)\n        .then((res, rej)=>{\n            dispatch(setUpdateResp(res.data))\n        })\n    }\n}","import {\n    GET_USER_INFO,\n    USER_FETCHING,\n    SET_UPDATED_USER_INFO,\n} from '../actionTypes';\n\nimport{getUserInfo, updateUserInfo} from '../../utils/API';\n\nconst setUserInfo = info => ({type:GET_USER_INFO, payload: info});\nconst userFetching = bool => ({type: USER_FETCHING, payload: bool});\n\nexport const changeUserInfo = info => ({type: SET_UPDATED_USER_INFO, payload: info});\n\nexport const gettingUserInfo = () =>{\n\n    return dispatch => {\n        dispatch(userFetching(true));\n        getUserInfo()\n        .then(\n            user => {\n                dispatch(setUserInfo({...user.data.user}))\n                userFetching(false)\n            }    \n        )\n        .catch((e)=>console.log(e))\n        .finally(()=>dispatch(userFetching(false)))\n    }\n}\n\nexport const changingUserInfo = (data) => {\n    delete data.isFetching;\n    return  dispatch => {\n        updateUserInfo(data)\n    }\n}","import {H_D_SET_DETAILS} from '../actionTypes';\nimport {getWorkDaysPerRange} from '../../utils/API'\n\nexport const setHistoryDatails = (detail) => ({type:H_D_SET_DETAILS, payload: detail});\n\n\nexport const settingHistoryDetails = (dayRange) => {\n    return dispatch =>{\n        getWorkDaysPerRange(dayRange)\n        .then(res => res.data.info && dispatch(setHistoryDatails(res.data)));\n    }\n}","import React,{useState} from 'react';\nimport { AuthPage } from './AuthPage'\nimport {connect} from 'react-redux';\nimport {login, registration} from '../../store/actions';\n\nconst AuthContainer = props => {\n    const [form, setForm] = useState({ email: '', password: '', paymentRange:'пн-сб'});\n\n    const formHandler = (e) => {\n        setForm({ ...form, [e.target.name]: e.target.value })\n        console.log(form)\n    }\n\n    const loginHandler = (prop) => {\n        props.loginStore(form)\n    }\n\n    const registrationHandler = (prop) => {\n        props.registration(form)\n    }\n\n    return (\n        <AuthPage {...props}\n            formHandler={formHandler}\n            loginHandler={loginHandler}\n            registrationHandler={registrationHandler}\n            isFetching={props.isFetching}\n        />\n    )\n}\nconst mapState = state => ({\n    isFetching: state.auth.isFetching,\n    message: state.auth.message,\n})\nconst mapDispatch = dispatch =>(\n    {\n        loginStore: payload => dispatch( login(payload) ),\n        registration: payload => dispatch( registration(payload) )\n    }\n)\n\nexport default connect(mapState, mapDispatch)(AuthContainer)","import axios from 'axios';\nimport {\n    SET_TOKEN,\n    REGISTRATION_SUCCESSFULL,\n    REGISTRATION_FAILURE,\n    DELETE_TOKEN,\n    SHOW_MODAL_LOGOUT,\n    HIDE_MODAL_LOGOUT,\n    SHOW_MODAL_INFO,\n    HIDE_MODAL_INFO,\n} from '../actionTypes';\n\nimport {startRequest, endRequest, setError} from './requestState';\n\nimport {saveToLocalStorage} from './localStorageActions'\n\nconst setToken = (tokenAnduserId) => ({type: SET_TOKEN, payload: tokenAnduserId});\n\nconst registrationSuccessfull = () => ({type: REGISTRATION_SUCCESSFULL});\nconst registrationFailure = () => ({type: REGISTRATION_FAILURE});\n\nexport const login = (formData) => {\n    return dispatch => {\n        dispatch( startRequest() );\n\n        axios.post('/api/auth/login',{\n            email:formData.email,\n            password: formData.password,\n\n        })\n        .then(res=>{\n                dispatch( setToken(res.data) );\n                dispatch( saveToLocalStorage(res.data.token) )\n                dispatch( endRequest() );\n        })\n        .catch(err=>{\n                dispatch( setError() );\n                dispatch( endRequest() );\n        })\n    }\n};\n\nexport const registration = formData => {\n    return dispatch => {\n        dispatch( startRequest() );\n\n        axios.post('/api/auth/register',{\n            ...formData\n        })\n        .then(res=>{\n            dispatch( registrationSuccessfull() );\n            dispatch( endRequest() );\n\n        })\n        .catch(error=>{\n            dispatch( registrationFailure() )\n            dispatch( endRequest() );\n\n        })\n    }\n}\n\nconst deleteToken = () => ({type: DELETE_TOKEN})\n\nexport const logout = () => {\n    return dispatch => {\n        dispatch(deleteToken())\n    }\n}\n\nexport const logoutModal = message => ({type: SHOW_MODAL_LOGOUT, payload: message}) \nexport const logoutCloseModal = () => ({type: HIDE_MODAL_LOGOUT});\n\nexport const infoModal = message => ({type: SHOW_MODAL_INFO, payload: message}) \nexport const infoCloseModal = () => ({type: HIDE_MODAL_INFO});\n\n","import React from 'react';\nimport stl from './header.module.css';\nimport { Link } from 'react-router-dom';\n\n\nexport const Header = props => {\n    const { location, includePathHandler } = props;\n    return (\n        <div className={stl.header}>\n            <nav className={stl.nav}>\n                <Link to='/main' className={`${stl.navItem} ${includePathHandler(location.pathname, '/main') && stl.navCheck}`}\n                >\n                    <span\n\n                    >Главная</span>\n\n                </Link>\n                <Link to='/newtask' className={`${stl.navItem} ${includePathHandler(location.pathname, '/newtask') && stl.navCheck}`}\n                >\n                    <span>Добавить работы</span>\n\n                </Link>\n\n                <Link to='/history/day' className={`${stl.navItem} ${includePathHandler(location.pathname, '/history') && stl.navCheck}`}\n                >\n                    <span>История</span>\n                </Link>\n\n                <Link to='/' className={stl.navItem} onClick={() => { props.logout() }}>\n                    <span\n\n                    >Выйти</span>\n                </Link>\n\n            </nav>\n        </div>\n    )\n}","import React from 'react';\nimport {Header} from './Header';\nimport {connect} from 'react-redux';\nimport { useLocation} from 'react-router-dom';\nimport {logout} from '../../../../store/actions'\n\n\nconst HeaderContainer = props => {\n    const location = useLocation();\n    const isIncludePathHandler = (path, search) => {\n        return path.includes(search)\n        \n    }\n\n    return location && <Header logout={props.logout} location = {location} includePathHandler = {isIncludePathHandler}/>\n\n}\n\nconst mapDispatch = dispatch =>({\n    logout: () => dispatch(logout())\n})\n\nexport default connect(null, mapDispatch)(HeaderContainer)","import React from 'react';\nimport {ContentPage} from './Content';\nimport {connect} from 'react-redux';\nimport { settingTaskList } from '../../../../store/actions'\n\nconst mapDispatch = dispatch => ({\n    setTaskList: payload => dispatch( settingTaskList(payload) ),\n})\n\nexport default connect(null, mapDispatch)(ContentPage)","import {useEffect} from 'react';\n\nexport const ContentPage = props => {\n    useEffect(()=>{\n        // инициируем список работ перед полной загрузкой приложения\n        props.setTaskList()\n    },[])\n    return(\n        props.children\n    )\n}","import React, { useCallback, useState } from 'react';\nimport stl from './AddTask.module.css';\nimport { v4 } from 'uuid'\n\nexport const AddTaskComponent = props => {\n    const componentsList = [];\n    const { checkboxHandler, radioHandler, costHandler } = props;\n\n\n    for (const key in props) {\n        props[key].tasks\n            &&\n            componentsList.push(\n                { tasks: props[key].tasks, id: props[key].id, typeOfSystem: key, area: props[key].area }\n            )\n    }\n\n    return <>\n        {componentsList.map(item => {\n\n            return <TitleComponent\n                key={item.area}\n                checkboxHandler={checkboxHandler}\n                radioHandler={radioHandler}\n                costHandler={costHandler}\n                title={item.area}\n\n                id={item.id}\n                content={item.tasks}\n                typeOfSystem={item.typeOfSystem}\n            />\n        })}\n    </>\n}\n\n\n\n\nconst TitleComponent = props => {\n    const [isOpen, setOpen] = useState(false);\n    const { checkboxHandler, radioHandler, costHandler, title, content, typeOfSystem } = props;\n    return <>\n        <div\n            className={`${stl.title} ${isOpen && stl.stickyTitle}`}\n            onClick={() => setOpen(!isOpen)}\n        >\n            {title}\n        </div>\n        {\n            isOpen\n            &&\n            content.map(item => <ContentComponent\n                key={item.id}\n                checkboxHandler={checkboxHandler}\n                radioHandler={radioHandler}\n                costHandler={costHandler}\n                listItem={item.title}\n                id={item.id}\n                showBtn={item.showBtn && item.showBtn}\n                sides={item.sides}\n                cost={item.cost}\n                typeOfSystem={typeOfSystem}\n            />\n            )\n        }\n    </>\n}\n\n\n\n\nconst ContentComponent = props => {\n    const { checkboxHandler, typeOfSystem, radioHandler } = props;\n    const checkAllSides = () => {\n        if (!props.sides) {\n            return\n        }\n        props.sides.forEach(item => {\n            checkboxHandler({ name: item.side.name, id: props.id, typeOfSystem }, true);\n        })\n    }\n    const uncheckAllSides = () => {\n        if (!props.sides) {\n            return\n        }\n        props.sides.forEach(item => {\n            checkboxHandler({ name: item.side.name, id: props.id, typeOfSystem }, false);\n        })\n    }\n    const calcSidesLength = () => {\n        if (!props.sides) {\n            return\n        }\n        const length = props.sides.map(item => {\n            return item.side.subSides ? item.side.subSides : item\n        }).flat().filter(item => item !== undefined).length\n\n\n        const checked = props.sides.filter(item => {\n            if (item.side.subSides) {\n                const subs = item.side.subSides.filter(subItem => {\n                    return subItem.isChecked;\n                })\n                return subs.length\n            }\n            return item.side.isChecked\n        })\n        const finalLength = checked.map(item => {\n            return item.side.subSides && item.side.subSides.filter(filterItem => filterItem.isChecked)\n        })\n        return (finalLength.flat().length / length) * 100;\n    }\n\n\n    return (\n        <div className={stl.list} >\n            <span className={stl.listComponent}> {props.listItem} </span>\n            <div className={stl.checkboxContainer}>\n                {\n                    props.sides && props.sides.map(item => {\n                        return <ContentCheckBoxes\n                            key={item.id}\n                            checkboxHandler={checkboxHandler}\n                            radioHandler={radioHandler}\n                            name={item.side.name}\n                            isChecked={item.side.isChecked}\n                            id={props.id}\n                            showBtn={props.showBtn}\n                            sideId={item.id}\n                            typeOfSystem={typeOfSystem}\n                            subSides={item.side.subSides && item.side.subSides}\n                        />\n                    })\n\n                }\n            </div>\n            <input\n                className={stl.cost}\n                type='number'\n                defaultValue={props.cost}\n                placeholder='$'\n                onChange={(e) => props.costHandler(props, e.target.value)}\n            />\n            {\n                props.showBtn ?\n                    <div className={stl.buttonBlock}>\n                        <button\n                            style={{\n                                background: `linear-gradient(90deg,darkcyan ${calcSidesLength()}%, transparent 0% )`\n                            }}\n                            className={stl.checkAll}\n                            onClick={checkAllSides}\n                        >\n                            {'Выбрать все'}\n                        </button>\n                        <button style={{\n                            background: `linear-gradient(270deg,transparent ${calcSidesLength()}%, #a25050 0% )`\n                        }}\n                            className={stl.uncheckAll}\n                            onClick={uncheckAllSides}>\n                            {'Отменить все'}\n                        </button>\n                    </div>\n                    :\n                    null\n            }\n        </div>\n    )\n}\n\nconst ContentCheckBoxes = props => {\n    const id = v4();\n    const checkBox = (e) => {\n        props.checkboxHandler({\n            typeOfSystem: props.typeOfSystem,\n            isSubSides: props.isSubSides,\n            sideId: props.sideId,\n            name: props.name,\n            id: props.id,\n        }, e.target.checked)\n    }\n    const radio = (e) => {\n        props.radioHandler({\n            name: props.name,\n            id: props.id,\n            typeOfSystem: props.typeOfSystem,\n            isSubSides: props.isSubSides,\n            radio: !props.showBtn,\n            sideId: props.sideId,\n        }, e.target.checked)\n    }\n\n    const clearRadio = (e) => {\n        props.radioHandler({\n            name: props.name,\n            id: props.id,\n            typeOfSystem: props.typeOfSystem,\n            isSubSides: props.isSubSides,\n            sideId: props.sideId,\n            radio: !props.showBtn,\n            clear: true,\n        }, e.target.checked)\n    }\n\n\n    return (\n        <div >\n            <input\n                onChange={(e) => props.showBtn ? checkBox(e) : radio(e)}\n                id={id}\n                type={props.showBtn ? 'checkbox' : 'radio'}\n                name={props.id}\n                checked={props.isChecked}\n            />\n            <label className={stl.label} htmlFor={id}>\n\n                {props.name}\n            </label>\n            {\n                (props.isChecked && !props.showBtn)\n                &&\n                <button onClick={(e) => clearRadio(e)}>\n                    {'Отменить'}\n                </button>\n            }\n            <div className={stl.subList}>\n                {\n                    props.isChecked\n                    &&\n                    props.subSides && props.subSides.map(item => {\n                        return <ContentCheckBoxes\n                            id={props.id}\n                            typeOfSystem={props.typeOfSystem}\n                            sideId={props.sideId}\n                            isChecked={item.isChecked}\n                            name={item.name}\n                            isSubSides={true}\n                            showBtn={props.showBtn}\n                            checkboxHandler={props.checkboxHandler} />\n                    })\n                }\n            </div>\n        </div>\n    )\n}","import React from 'react';\nimport stl from './ErrorPage.module.css'\n\nexport const ErrorPage = props => {\n    return <div className={stl.errorContainer}>\n        <h2>Ошибка</h2>\n        {' '}\n        <span>{props.error}</span>\n    </div>\n}","import React from  'react';\nimport {AddTaskComponent} from './AddTasksComponent';\nimport {ErrorPage} from '../../../ErorrPage/ErrorPage';\n\n\nconst Global = props => {\n    const {typeOfMainSystem} = props;\n    const checkboxHandler = (values, e) => {\n        props.changeHandlerStore({name: values.name,\n                                    id: values.id,\n                                    isChecked: e,\n                                    typeOfSystem: values.typeOfSystem,\n                                    mainSystem: typeOfMainSystem,\n                                    sideId: values.sideId,\n                                    isSubSides: values.isSubSides && values.isSubSides,\n            });\n\n    }\n\n    const radioHandler = (values, e) => {\n        props.changeHandlerStore({name: values.name,\n            id: values.id,\n            isChecked: e,\n            typeOfSystem: values.typeOfSystem,\n            mainSystem: typeOfMainSystem,\n            sideId: values.sideId,\n            isSubSides: values.isSubSides && values.isSubSides,\n            radio: values.radio,\n            clear: values.clear\n});\n    }\n\n    const costHandler = (values, cost) => {\n        props.changeHandlerStore({\n                                    name: values.name,\n                                    id: values.id,\n                                    typeOfSystem: values.typeOfSystem,\n                                    cost,\n                                    mainSystem: typeOfMainSystem,\n        })\n    }\n    if(props.error){\n        return (<ErrorPage error={props.error} />)\n    }\n    return (\n        <AddTaskComponent {...props.area} \n                          mainTypeSystem={typeOfMainSystem}\n                          checkboxHandler={checkboxHandler}\n                          radioHandler={radioHandler}\n                          costHandler={costHandler}\n        />\n    )\n};\n\n\nexport default(Global)","import React from 'react';\nimport { connect } from 'react-redux';\nimport GlobalTask from './GlobalTasksContainer';\nimport { setTaskOptions } from '../../../../../../../store/actions'\n\n\nconst ChassisContainer = props => {\n    const typeOfMainSystem = 'chassis';\n\n    return <GlobalTask\n        area={props.chassis}\n        changeHandlerStore={props.changeChassisInStore}\n        error={props.error}\n        typeOfMainSystem={typeOfMainSystem}\n    />\n};\n\nconst mapState = state => ({\n    chassis: state.tasks.chassis,\n    error: state.tasks.error,\n});\n\nconst mapDispatch = dispatch => ({\n    changeChassisInStore: payload => dispatch(setTaskOptions(payload))\n})\n\nexport default connect(mapState, mapDispatch)(ChassisContainer)","import React from 'react';\nimport { connect } from 'react-redux';\nimport GlobalTask from './GlobalTasksContainer';\nimport { setTaskOptions } from '../../../../../../../store/actions'\n\n\nconst EngineContainer = props => {\n    const typeOfMainSystem = 'engine';\n\n    return <GlobalTask\n        area={props.engine}\n        changeHandlerStore={props.changeEngineInStore}\n        error={props.error}\n        typeOfMainSystem={typeOfMainSystem}\n    />\n};\n\nconst mapState = state => ({\n    engine: state.tasks.engine,\n    error: state.tasks.error,\n});\n\nconst mapDispatch = dispatch => ({\n    changeEngineInStore: payload => dispatch(setTaskOptions(payload))\n})\n\nexport default connect(mapState, mapDispatch)(EngineContainer);","import React from 'react';\nimport { connect } from 'react-redux';\nimport GlobalTask from './GlobalTasksContainer';\nimport { setTaskOptions } from '../../../../../../../store/actions'\n\n\nconst TransmissionContainer = props => {\n    const typeOfMainSystem = 'transmission';\n\n    return <GlobalTask\n        area={props.transmission}\n        changeHandlerStore={props.changeTransmissionInStore}\n        error={props.error}\n        typeOfMainSystem={typeOfMainSystem}\n    />\n};\n\nconst mapState = state => ({\n    transmission: state.tasks.transmission,\n    error: state.tasks.error,\n});\n\nconst mapDispatch = dispatch => ({\n    changeTransmissionInStore: payload => dispatch(setTaskOptions(payload))\n})\n\nexport default connect(mapState, mapDispatch)(TransmissionContainer);","import React from 'react';\nimport {Link ,useRouteMatch} from 'react-router-dom';\nimport stl from './TaskTypeButton.module.css';\n\n//компонент выбора типа работ: ходовая, мотор итд\nexport const TaskTypeButton = props => {\n    const match = useRouteMatch()\n    return(\n        <Link to={match.url+props.path}>\n            <button\n                onClick={()=>props.setTopSideName(props.title)} \n                type='button' className={stl.button}>\n                {props.title}\n            </button>\n        </Link>\n    )\n};\n\n","import React,{useEffect} from 'react';\nimport {connect} from 'react-redux';\nimport {TaskTypeButton} from './TaskTypeButton';\nimport {setTaskMenuTitle} from '../../../../../../../store/actions'\n\n\nconst TaskTypeButtonContainer = props => {\n\n    return <TaskTypeButton {...props}/>\n}\n\nconst mapDispatch = dispatch => ({\n    setTopSideName: title => dispatch(setTaskMenuTitle(title))\n})\n\nexport default connect(null, mapDispatch)(TaskTypeButtonContainer)\n","import {\n    SHOW_MODAL_GLOB,\n    HIDE_MODAL_GLOB,\n    SHOW_MODAL_INFO,\n    HIDE_MODAL_INFO,\n    SET_TASK_MENU_TITLE,\n} from '../actionTypes'\n\nexport const hideModal = mesage => ({type: HIDE_MODAL_GLOB, payload: mesage});\n\nexport const showModal = mesage =>({type: SHOW_MODAL_GLOB, payload: mesage});\n\nexport const infoModal = message => ({type: SHOW_MODAL_INFO, payload: message}) \nexport const infoCloseModal = () => ({type: HIDE_MODAL_INFO});\n\nexport const setTaskMenuTitle = title => ({type: SET_TASK_MENU_TITLE, payload: title})","import React from 'react';\nimport  TaskTypeButton from '../TaskTypeButton/TaskTypeButtonContainer';\nimport stl from './TaskTypeMenu.module.css'\n\nexport const TaskTypeMenu = props => {\n    const { taskTypes } = props;\n\n    return <div className={stl.typeTaskList}>\n\n            {\n                taskTypes.map(item => {\n                    return <TaskTypeButton key={item.path} title={item.title} path={item.path} />\n                })\n            }\n    </div>\n}","import React from 'react';\nimport stl from './Loader.module.css';\n\nexport const Loader = props => {\n    const {size} = props\n    return <div className={stl.container + ' ' + stl[size]}>\n        <span className={stl.text}>loading</span>\n        <div className={stl.loader}> </div>\n    </div>\n}\n\n","import React, { useRef } from 'react';\nimport stl from './SetCar.module.css';\nimport {Loader} from '../../../../Loader/Loader'\n\nexport const SetCar = props => {\n    const htmlIdMarks = 'cars';\n    const htmlIdModels = 'models';\n\n    const { getModel, models, cars, isFetching, setMark, setModel, checkedMark, checkedModel } = props;\n\n    const input1 = useRef(null);\n    const input2= useRef(null);\n\n\n    const clearInput = (numb) => {\n        numb \n        ?\n        input1.current.value=''\n        :\n        input2.current.value=''\n    }\n\n    return(\n        <>\n        <div className={stl.wrapper}>\n            { isFetching && <Loader size='s' />}\n        </div>\n            <div\n                className={stl.form}>\n                    \n                <input \n                    ref={input1}\n                    list={htmlIdMarks}\n                    className={stl.setCar}\n                    type='text'\n                    defaultValue={checkedMark}\n                    placeholder={cars ? cars.join(', ') : 'Марка'}\n                    onChange={(e)=>{ getModel(e.target.value); setModel(e.target.value)}}\n                />\n                <button \n                    className={stl.button}\n                    onClick={()=>clearInput(1)}\n                >\n                    x\n                </button>\n            \n                <datalist id={htmlIdMarks}>\n                    {\n                        cars && cars.map(item=><option key={item}>{item}</option>)\n                    }\n                </datalist>\n\n\n                <input\n                    ref={input2}\n                    list={htmlIdModels}\n                    className={stl.setCar}\n                    type='text'\n                    defaultValue={checkedModel}\n                    placeholder={models ? models.map(item=>item.model).join(', ') : 'Модель'}\n                    onChange={e=>{ setMark(e.target.value) }}\n                />\n                <button \n                    className={stl.button}\n                    onClick={()=>clearInput()}\n                >\n                    x\n                </button>\n\n                <datalist id={htmlIdModels}>\n                    {\n                        models && models.map(item=><option key={item.model} >{item.model}</option>)\n                    }\n                </datalist>\n            </div>\n        </>\n    )\n}","import React, { useEffect } from 'react';\nimport { SetCar } from './SetCar';\nimport { settingAutomobileList, settingMark, setModel, setMark } from '../../../../../../../store/actions'\nimport { connect } from 'react-redux';\n\n\nconst SetCarContainer = props => {\n\n    const { autoList,\n        modelList,\n        getModel,\n        getAutos,\n        setMark,\n        setModel,\n        isFetching,\n        checkedMark,\n        checkedModel\n    } = props;\n\n    useEffect(() => {\n        //если список авто уже получен запрос не отправляем\n       !props.autoList && getAutos();\n    }, [])\n\n    const checkMark = mark => {\n        const isExist = autoList && autoList.some(item => {\n            return item === mark\n        })\n        return isExist && mark\n    }\n\n\n\n    const getmModel = mark => {\n        if (checkMark(mark)) {\n            getModel(mark)\n        }\n    }\n\n    return (\n        <SetCar cars={autoList}\n            getModel={getmModel}\n            models={modelList}\n            isFetching={isFetching}\n            setMark={setMark}\n            setModel={setModel}\n            checkedMark={checkedMark}\n            checkedModel={checkedModel}\n\n        />\n    )\n}\n\nconst mapState = store => ({\n    autoList: store.marks.automobiles,\n    modelList: store.marks.currentMark,\n    isFetching: store.marks.isFetching,\n    checkedMark: store.marks.checkedMark,\n    checkedModel: store.marks.checkedModel,\n})\n\nconst mapDispatch = dispatch => ({\n    getAutos: () => dispatch(settingAutomobileList()),\n    getModel: model => dispatch(settingMark(model)),\n    setModel: model => dispatch(setModel(model)),\n    setMark: mark => dispatch(setMark(mark)),\n\n})\n\nexport default connect(mapState, mapDispatch)(SetCarContainer)","import React from 'react';\nimport stl from './Modal.module.css';\n\nexport const Modal =    props => {\n    const {okButton, noButton, message, description} = props;\n    return (\n        <div className={`${stl.bg} ${ !okButton ? stl.fade_In_Out : stl.fade_In}`}>\n            <div className={stl.modal}>\n                <h6 className={stl.title}>\n                    {description&&description}\n                </h6>\n                <span className={stl.content}>\n                    {message&&message}\n                </span>\n                <div className={stl.modalBtnContainer}>\n                    {\n                        okButton\n                        ?\n                        <button className={stl.modalBtn} onClick={()=>okButton()}> Ok  </button>\n                        :\n                        null\n                    }\n                    {\n                        noButton\n                        ?\n                        <button className={stl.modalBtn} onClick={()=>noButton()} > No </button>\n                        :\n                        null\n                    }\n                </div>\n            </div>\n        </div>\n    )\n}","import React from 'react';\nimport {Modal} from './Modal'\nimport {connect} from 'react-redux';\n\nconst ModalContainer = props => {\n    \n    return(\n        <Modal {...props}/>\n    )\n}\n\nexport default connect()(ModalContainer)","import React from 'react';\nimport {Link ,useLocation} from 'react-router-dom'\nimport stl from './DoneButton.module.css';\nimport Modal from '../../../../Modal/ModalContainer'\n\nexport const DoneButton =props => {\n    const location = useLocation();\n    const { saveTasksToServer,isShowModal, hideModal, messageForModal, descriptionforModal } = props;\n    return (\n        <>\n        <button\n            className={`btn ${stl.btn}`}\n            onClick={saveTasksToServer}\n        >\n            Готово\n            {/* <span className={stl.btnCount}>1</span> */}\n        \n        </button>\n        {\n            isShowModal && <Modal message={messageForModal} description={descriptionforModal} okButton={()=>hideModal()} />\n        }\n        </>\n    )\n}","import React, { useEffect,useState } from 'react';\nimport {Redirect} from 'react-router-dom'\nimport { DoneButton } from './DoneButton';\nimport { connect } from 'react-redux';\nimport { setChoosedTasks, sendingChoosedTasks, getTasks ,showModal, hideModal, settingTaskList} from '../../../../../../../store/actions'\n\n\nconst DoneButtonContainer = props => {\n    const { allTasks,choosedCar, setChoosed, sendChoosedTask, getTasks, delTask } = props;\n        let sumCost = 0;\n        let sumTaskCount = 0;\n        let checkedOnce = true;\n\n    const [isSent, setSent] = useState(false);\n\nuseEffect(()=>{\n        const onlyCheckedTasks = [];\n\n        const isEmptyObj = (obj) => {\n            for (const key in obj) {\n                return false\n            }\n            return true\n        }\n\n        const recurseRoundAllTasks = (obj) => {\n            for (let key in obj) {\n                if (Array.isArray(obj[key]) && !obj.notRecurse) {\n                    obj[key].forEach((item,i) => {\n                        sumCost+= !item.cost ?  0 : +item.cost ;\n                        const x = item.sides && item.sides.reduce((accum, subItem) => {\n                            if ( subItem.side.isChecked ) {\n                                accum.title = item.title;\n                                accum.names = accum.names || [];\n                                accum.cost = item.cost;\n                                accum.id = item.id;\n                                accum.canBeHideTitle = item.canBeHideTitle ? item.canBeHideTitle : false;\n                                accum.names.push( {side: subItem.side.name, id: subItem.id} );\n                                sumTaskCount += subItem.side.subSides ?  0 : 1;\n                                if (subItem.side.subSides) {\n                                    accum.names[accum.names.length-1].subWork = \n                                        subItem.side.subSides\n                                        .filter(subSubItem =>{\n                                             return subSubItem.isChecked})\n                                        .map(nameItem => {\n                                                sumTaskCount += 1;\n                                              return {name: nameItem.name, id:nameItem.id}\n                                            });\n                                }\n                            }\n                            return accum\n                        }, {})\n                        isEmptyObj(x) || onlyCheckedTasks.push(x)\n                    })\n                }\n                if (typeof obj[key] === 'object' && !Array.isArray(obj[key])) {\n                    recurseRoundAllTasks(obj[key])\n                }\n            }\n        checkedOnce = true;\n\n        }\n        recurseRoundAllTasks(allTasks);\n\n        const checkedTasksObj = {\n            tasks: onlyCheckedTasks,\n            totalCost: sumCost,\n            totalTaskCount: sumTaskCount,\n        }\n        setChoosed(checkedTasksObj)\n\n    }, [allTasks.chassis, allTasks.engine, allTasks.electrical, allTasks.transmission])\n\n    const saveTasksToServer = () => {\n        //отправляем выбранные работы на сервер\n        if(props.choosedTasks.tasks.length){\n            sendChoosedTask({...props.choosedTasks, ...props.choosedCar});\n            //переинициализируем список работ для выбора что-бы сбросить изменения\n            props.reinitTaskList();\n            setSent(true);\n        } else {\n            props.showModal()\n        }\n        const prepparedObj = {\n            car: props.choosedCar,\n            tasks: props.choosedTasks,\n            // sum\n        }\n\n    }\n\n    return (<>\n        <DoneButton isShowModal={props.isShowModal}\n                    hideModal={props.hideModal}\n                    messageForModal={props.messageForModal}\n                    descriptionforModal={props.descriptionForModal}\n                    saveTasksToServer={saveTasksToServer}\n                    getTasks={getTasks}\n                    delTask={delTask}/>\n                    {isSent && <Redirect to='/history/day' />}\n                    </>\n    )\n}\nconst mapState = store => ({\n    allTasks: store.tasks,\n    isShowModal: store.global.isShowModalGlob,\n    messageForModal: store.global.message,\n    descriptionForModal: store.global.description,\n    choosedTasks: store.tasks.choosedTasks,\n    choosedCar: {mark: store.marks.checkedMark, model: store.marks.checkedModel}\n\n})\n\nconst mapDispatch = dispatch => ({\n    setChoosed: payload => dispatch(setChoosedTasks(payload)),\n    sendChoosedTask: payload => dispatch(sendingChoosedTasks(payload)),\n    getTasks: () => dispatch(getTasks()),\n    hideModal: () => dispatch(hideModal()),\n    showModal: () => dispatch(showModal()),\n    reinitTaskList: () => dispatch(settingTaskList())\n})\n\nexport default connect(mapState, mapDispatch)(DoneButtonContainer)","import React from 'react';\nimport { Switch, Route, Link, useRouteMatch, } from 'react-router-dom';\nimport ChassisContainer from './AddTask/ChassisContainer';\nimport EngineContainer from './AddTask/EngineContainer';\nimport TransmissionContainer from './AddTask/TransmissionContainer';\nimport { TaskTypeMenu } from './TaskTypeMenu/TaskTypeMenu';\nimport SetCarContainer from './SetAutomobileComponent/SetCarContainer';\nimport DoneButton from './DoneButton/DoneButtonContainer';\nimport stl from './CreateTask.module.css';\n\nexport const CreateTaskMainComponent = props => {\n    const match = useRouteMatch();\n    const localPath = '/newtask'\n    const taskTypes = [\n        { title: 'ходовая', path: '/chassis' },\n        { title: 'мотор', path: '/engine' },\n        { title: 'ТО', path: '/technical-servicing' },\n        { title: 'Трансмиссия', path: '/transmission' },\n        { title: 'Доп. оборудование', path: '/addition-equip' }\n    ];\n    return (<>\n            <div className={stl.topContainer}>\n                {\n                    match.url === localPath && match.isExact\n                        ?\n                        null\n                        :\n                        <span className={stl.linkBack} >\n                            <Link style={{ marginRight: 'auto' }} to={localPath}>\n                                {/* &#8592; */}\n                                <button className={`btn ${stl.btn}`}>Назад</button>\n                        </Link>\n                \n\n                        </span>\n                }\n                {!(match.url === localPath && match.isExact) && <div className={stl.topSideTitle}>{props.topSideTitle}</div>}\n                <DoneButton />\n            </div>\n        <div className={stl.container}>\n            <Switch>\n                <Route exact path={localPath}>\n\n                    <SetCarContainer />\n                    <TaskTypeMenu taskTypes={taskTypes} />\n\n                </Route>\n\n                <Route path={`${localPath}/chassis`}>\n\n                    <ChassisContainer />\n\n                </Route>\n                <Route path={`${localPath}/engine`}>\n\n                    <EngineContainer />\n\n                </Route>\n                <Route path={`${localPath}/transmission`}>\n\n                    <TransmissionContainer />\n\n                </Route>\n                <Route path={`${localPath}/technical-servicing`}>\n\n                    {'maintanence'}\n\n                </Route>\n            </Switch>\n\n        </div>\n        </>\n    )\n}","import React from 'react';\nimport {connect} from 'react-redux';\nimport { CreateTaskMainComponent } from './CreateTaskMainComponent';\n\nconst CreateTaskContainer = props => {\n    return <CreateTaskMainComponent {...props} />\n}\n\nconst mapState = state => ({\n    topSideTitle: state.global.taskMenuTitle\n})\n\nexport default connect(mapState)(CreateTaskContainer)","import React from 'react';\nimport stl from '../History.module.css';\nimport {v4} from 'uuid';\n\nexport const HistoryItem = props => {\n    const { taskItem, i, isEdit, editHandler } = props;\n    return (\n\n        //Ordinary HistItem \n\n        !isEdit\n            ?\n            <li className={stl.liItem}>\n                <span className={stl.taskType}>{taskItem.title}</span>\n                {taskItem.names && taskItem.names.map((nameItem, i) => {\n                    return <React.Fragment key={i}>\n                        <div key={nameItem.side} className={stl.taskName}> {nameItem.side} </div>\n\n                        {\n                            nameItem.subWork && nameItem.subWork.map((subItem, i) => {\n                                return <div key={i} className={stl.taskSubItem}> {subItem.name} </div>\n                            })\n                        }\n\n                    </React.Fragment>\n                })}\n                <span className={stl.taskCost}>{taskItem.cost !== undefined ? taskItem.cost : '0' + ' грн'}</span>\n            </li>\n\n            :\n\n            //Editable HistItem\n\n            <li className={stl.liItem}>\n                <button\n                    onClick={()=>props.handlers.delTask({id:taskItem.id})}\n                > Уд. работу</button>\n                <span className={stl.inputDescription}>Заголовок</span>\n                <input\n                    className={stl.taskType}\n                    defaultValue={taskItem.title}\n                    //setTitle\n                    onChange={(e) => props.handlers.setTitle({ value: e.target.value, id: taskItem.id })}\n                />\n                <div className={stl.sideTitle}>\n                    <span className={stl.inputDescription}>Назв.Работы/Сторона</span>\n                    \n                    <button \n                    //addSide\n                        onClick={() =>props.handlers.addSide({id: taskItem.id, newId: v4()})}\n                    >\n                        Доб. поле\n                    </button>\n\n                </div>\n                {taskItem.names && taskItem.names.map((nameItem, mainI) => {\n                    return <React.Fragment key={nameItem.id}>\n                        <div className={stl.sideWrapper}>\n                            <input\n                                className={stl.taskName}\n                                defaultValue={nameItem.side}\n                                //setSide\n                                onChange={e => props.handlers.setSide({ value: e.target.value, i: mainI, id: taskItem.id })}\n                            />\n                            <button\n                                //delSide\n                                onClick={()=>props.handlers.delSide({id:taskItem.id, i:mainI})}\n                            >   \n                            {/* delete Icon */}\n                                &#128465;\n                            </button>\n                            <button\n                                //addSubwork\n                                onClick={()=> props.handlers.addSubwork({id: taskItem.id, nameId: nameItem.id, newId: v4()})}\n                            >&#9997;</button>\n                        </div>\n\n                        <div className={nameItem.subWork && stl.subWorkContainer}>\n                            {\n                                nameItem.subWork\n                                &&\n                                <span className={stl.inputDescription}>Детально</span>\n                            }\n                            {\n                                nameItem.subWork && nameItem.subWork.map((subItem, subI) => {\n                                    return <div className={stl.subWork} key={subItem.id}>\n                                        <input\n                                            defaultValue={subItem.name}\n                                            className={`${stl.taskSubItem} ${stl.inputTaskSubItem}`}\n                                            //setSubwork\n                                            onChange={e => props.handlers.setSubWork({ subI, value: e.target.value, i: mainI, id: taskItem.id })}\n                                        /> \n                                        <button \n                                            onClick={() => props.handlers.delSubWork({id: taskItem.id,  i:subI, nameId:nameItem.id})}\n                                        >\n                                            {/* delete Icon */}\n                                              &#128465;\n                                        </button>\n                                    </div >\n\n                                })\n                            }\n                        </div>\n                    </React.Fragment>\n                })}\n                <span className={stl.inputDescription}>Стоимость работ</span>\n                <input\n                    type={'number'}\n                    className={stl.taskCost}\n                    value={taskItem.cost !== undefined ? taskItem.cost : '0'}\n                    //setCost\n                    onChange={e => props.handlers.setCost({ value: e.target.value, id: taskItem.id })}\n                />\n            </li>\n    )\n}","import {\n    SET_INIT_TASKLIST,\n    START_REQUEST,\n    END_REQUEST,\n    ERROR_REQUEST,\n    SET_TASK_OPTIONS,\n    SET_FINAL_TASK,\n    GET_DONE_TASKS,\n} from '../actionTypes'\n\n\nconst initState = {\n    chassis: {},\n    engine: {},\n    transmission:{},\n    electrical: {},\n    choosedTasks: { notRecurse: true },\n    error: null,\n    isFetching: false,\n    doneTasks: null,\n}\n\n\nexport const tasks = (state = initState, action) => {\n    const { type, payload } = action;\n    switch (type) {\n\n        case SET_INIT_TASKLIST:\n            return { ...state,\n                    chassis: payload.chassisTasksGlobal,\n                    engine: payload.engineTasksGlobal,\n                    transmission: payload.transmissionTasksGlobal,\n                };\n\n        case START_REQUEST:\n            return { ...state, isFetching: true };\n        case END_REQUEST:\n            return { ...state, isFetching: false };\n        case ERROR_REQUEST:\n            return { ...state, error: 'Не удалось загрузить данные' };\n\n\n        case SET_TASK_OPTIONS:\n            const id = payload.id;\n            const sideId = payload.sideId;\n            const name = payload.name;\n            const isChecked = payload.isChecked;\n            const cost = payload.cost;\n            const typeSystem = payload.typeOfSystem;\n            const mainTypeSystem = payload.mainSystem;\n            const isSubsSides = payload.isSubSides;\n            const isRadio = payload.radio && payload.radio;\n            const clear = payload.clear && payload.clear; \n            return {\n                \n                ...state,\n                [mainTypeSystem]: {\n                    ...state[mainTypeSystem],\n\n                    [typeSystem]: {\n                        ...state[mainTypeSystem][typeSystem],\n                        tasks: state[mainTypeSystem][typeSystem].tasks.map(item => {\n                            if (item.id === id) {\n\n                                if (cost) {\n                                    return { ...item, cost }\n                                }\n                                if(isRadio && !clear){\n                                    return {...item, sides: item.sides.map(radioItem=>{\n                                        if (radioItem.id === sideId) {\n                                            return {...radioItem, side:{...radioItem.side, isChecked}}\n                                        }\n                                        return {...radioItem, side:{...radioItem.side, isChecked: false}}\n                                    })}\n                                } else if(isRadio && clear){\n                                    return {...item, sides: item.sides.map(radioItem=>{\n                                            return {...radioItem, side:{...radioItem.side, isChecked: false}}\n                                        \n                                    })}\n                                }\n                                return {\n                                    ...item, sides: item.sides.map(subItem => {\n                                        if (subItem.side.name === name) {\n                                            return { ...subItem, side: { ...subItem.side, isChecked } }\n                                        }\n\n                                        if (isSubsSides) {\n\n                                            return {\n                                                ...subItem,\n                                                side: {\n                                                    ...subItem.side,\n                                                    subSides: subItem.side.subSides && subItem.side.subSides.map(subSubItem => {\n                                                        if (subSubItem.name === name && subItem.id === sideId) {\n\n                                                            return { ...subSubItem, isChecked: isChecked }\n                                                        }\n                                                        return { ...subSubItem }\n                                                    })\n                                                }\n                                            }\n                                        }\n                                        return { ...subItem }\n                                    })\n                                }\n                            }\n                            return { ...item };\n                        })\n                    }\n\n                }\n            };\n        case SET_FINAL_TASK: \n            return {...state, choosedTasks: {...state.choosedTasks, ...payload}}\n        \n        // case GET_DONE_TASKS:\n        //     return {...state, doneTasks: payload };\n\n\n        default:\n            return { ...state };\n    }\n}\n","import React,{useEffect} from 'react';\nimport moment from 'moment';\nimport {useRouteMatch} from 'react-router-dom';\nimport { locale } from 'moment/locale/ru';\nimport {VIEW_FORMAT_DATE_TMP} from '../../../../../../../../utils/constants';\nimport {HistoryItem} from './HistoryItem';\nimport stl from '../History.module.css'\nimport { tasks } from '../../../../../../../../store/reducers/taskHandling';\n\n\nexport const History = props => {\n    const { doneTasks,getRequestType, path } = props;\n    useEffect(()=>{\n        getRequestType(path)\n    }) \n    \n\n\n    return Array.isArray(doneTasks && doneTasks.payload) && doneTasks.type === 'day'\n        ? (\n            <ol>\n                {\n                    doneTasks.payload.map(item => {\n                        return <div key={item[0].date} className={stl.taskItem}>\n                                \n                            {               \n                                item.map((subItem, i) => {\n                                    return <React.Fragment key={subItem.tasks._id}>\n                                        {\n                                            !i\n                                            &&\n                                            <span className={stl.taskDate}>\n                                                {moment(subItem.date, moment.ISO_8601).format(VIEW_FORMAT_DATE_TMP)}\n                                            </span>\n                                        }\n\n                                        {\n\n                                            // <HistoryDayCell tasks={subItem.tasks.tasks.data} />\n                                            <ul className={stl.listItem}>\n                                                <div className={stl.titleContainer}>\n\n                                                    <div>\n                                                        <span className={stl.mark} >{subItem.tasks.tasks.data.mark || 'Марка не указана'}</span>\n                                                        {' '}\n                                                        <span className={stl.mark}>{subItem.tasks.tasks.data.model}</span>\n                                                    </div>\n\n                                                    <span>{'Всего: ' + subItem.tasks.tasks.data.totalCost}</span>\n                                                    \n                                                    <button onClick={()=>{props.getTaskById(subItem.tasks._id)}} className={stl.btnChange}>\n                                                        {'Изменить'}\n                                                    </button>\n                                                </div>\n                                                 \n                                                {\n                                                    <HistoryDayMapping tasks={subItem.tasks.tasks.data.tasks}/>\n                                                    // subItem.tasks.tasks.data.tasks.map((taskItem, i) => {\n                                                    //     return <HistoryItem key={taskItem.id} taskItem={taskItem} i={i}/>\n                                                    // })\n                                                }\n                                            </ul>\n                                        }\n                                    </React.Fragment>\n                                })\n                            }\n                        </div>\n                    }\n                    )\n                }\n\n            </ol>\n        )\n        :\n        <>\n        <span> ¯ \\ _ (ツ) _ / ¯</span>\n        <span>пусто</span>\n        </>\n        // <Loader size='m'/>\n}\n\nexport const HistoryDayMapping = props => {\n   const {tasks} = props;\n    return(\n        tasks.map((taskItem, i) => {\n            return <HistoryItem key={taskItem.id} taskItem={taskItem} i={i}/>\n        })\n    )\n}","export const VIEW_FORMAT_DATE_TMP = 'MMMM DD, yyyy (dd)';\nexport const COMMON_FORMAT_DATE_TMP = 'YYYY-MM-DD';","import React, { useState } from 'react';\nimport moment from 'moment';\nimport stl from '../History.module.css';\n\n\nexport const WeekItems = props => {\n    \n    const checkFirstDay = (days) => {\n        const firstDay = days && days.filter((fItem, i) => {\n            return (moment(fItem.date).format('DD') === '01');\n        })\n        return firstDay.length ? moment(firstDay[0].date).format('MMMM') : null\n    }\n    return props.payload.map((item, i) => {\n        return <OneWeek {...props} item={item} i={i} checkFirstDay={checkFirstDay} />\n    })\n}\n\n\n\nconst OneWeek = props => {\n    \n    const { i, item, checkFirstDay,settingHistoryDetails } = props;\n    const dayRangePerWeek = {\n        firstDay: moment(item[0].date),\n        //костыль для правильной выборки из базы, если не добавить один день, выборка будет без последнего дня недели\n        lastDay: moment(item[item.length-1].date).add(1,'days')\n    }\n    \n\n    return (\n\n        <div key={i} className={stl.dateItemWeek}>\n\n            {\n                <div>\n                    {checkFirstDay(item)}\n                </div>\n\n            }\n            <div className={stl.weekWeek}>\n                {\n                    item.map(dateItem => {\n                        const day = moment(dateItem.date);\n                        return (\n                            <WeekDay {...dateItem} day={day} />\n                        )\n                    })\n                }\n                <button onClick={()=>settingHistoryDetails(dayRangePerWeek)}>info</button>\n            </div>\n\n\n        </div>\n\n    )\n}\n\n\n\nconst WeekDay = props => {\n    const today = moment().format('YYYY-MM-DD');\n    return (\n\n            <div\n                key={props.date}\n                style={{ border:` 1px solid ${props.day.format('dd') === 'вс' ? '#855050' : null}` }}\n                className={`${stl.dayWeek} ${props.haveBeenTasks && props.haveBeenTasks.length ? stl.checkedDay : ''} ${today === props.date ? stl.todayDay : ''}`}\n            >\n                <span style={{ fontSize: '10px',}}>{props.day.format('dd')}</span>\n                <span>{props.day.format('DD')}</span>\n            </div>\n\n    )\n}","import React, { useEffect } from 'react';\nimport {WeekItems} from './HistoryWeekItems';\n\n\nexport const HistoryByWeek = props => {\n    const { getRequestType, doneTasks, path} = props;\n\n    //getRequestType выполняется в useeffect потому что мы изменяем useState в родительском компоненте\n    useEffect(() => {\n        getRequestType(path);\n    })\n    const getFirstAndLastDay = (arr) => {\n        return {\n            first: arr[0],\n            last: arr[arr.length - 1]\n        }\n    }\n\n    return props.doneTasks && props.doneTasks.type === 'week' \n        ? \n        <div className={'date_container'}>\n            { \n                doneTasks.payload\n                &&\n                <Week {...props} payload={doneTasks.payload} dateRange={getFirstAndLastDay(doneTasks.payload)} />\n            }\n        </div>\n        :\n        'Пусто'\n}\n\nconst Week = props => {\n    return <div>\n        <WeekItems {...props} />\n    </div>\n}\n\n","import React from 'react';\n\n\nexport const HistoryByMonth = props => {\n    return ('В разработке')\n}","import React, { useEffect, useState } from 'react';\nimport { v4 } from 'uuid';\nimport { HistoryItem } from '../HistoryComponents/HistoryByDay/HistoryItem';\nimport ModalContainer  from '../../../../Modal/ModalContainer'\nimport stl from './HistoryModal.module.css';\nimport { set } from 'mongoose';\n\n\nexport const HistoryModal = props => {\n    const [isShowModal, setShowModal] = useState(false);\n\n    const { taskForChange } = props;\n    return <>\n        {taskForChange\n            &&\n            <div className={`modalWrapper fade`}>\n                <div className={`modalContainer`}>\n                    <div className={'headNav'}>\n                        <button onClick={() => props.clearTaskForChange(null)}>Закрыть</button>\n                        <span className={stl.costNav}>{taskForChange.tasks.data.totalCost + ' грн'}</span>\n                        <button\n                            onClick={() => { props.updateTask({ id: taskForChange._id, task: taskForChange.tasks.data }) }} >\n                            Сохр.\n                        </button>\n                        <button onClick={() => setShowModal(true)}> Удалить </button>\n                    </div>\n                    <span style={{ backgroundColor: 'orange' }}>{taskForChange._id}</span>\n\n                    <div>Марка: </div>\n                    <input\n                        defaultValue={taskForChange.tasks.data.mark}\n                        onChange={e => props.setMark(e.target.value)}\n                    />\n\n\n                    <div>Модель: </div>\n                    <input\n                        defaultValue={taskForChange.tasks.data.model}\n                        onChange={e => props.setModel(e.target.value)}\n                    />\n\n                    {\n                        taskForChange.tasks.data.tasks.map((taskItem, i) => {\n                            return <HistoryItem key={taskItem.id} handlers={{ ...props }} taskItem={taskItem} i={i} isEdit={true} />\n\n                        })\n                    }\n\n                    <button onClick={() => props.addTask({ id: v4(), newId: v4() })}> Добавить работу </button>\n                </div>\n            </div>\n        }\n\n        {\n            isShowModal && <ModalContainer\n                message={'Вы уревены что хотите удалить запись?'}\n                description={'Удаление записи'}\n                noButton={() => setShowModal(false)}\n                okButton={() => { setShowModal(false); props.deleteTask({ id: taskForChange._id }) }}\n            />\n        }\n    </>\n}\n\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { HistoryModal } from './HistoryModal';\nimport {\n    setTaskForChange,\n    setHistTitle,\n    setHistCOst,\n    setHistModel,\n    setHistMark,\n    setHistTask,\n    setHistSide,\n    setHistSubWork,\n    addHistSide,\n    delHistSide,\n    addHistSubWork,\n    delHistSubwork,\n    delHistTask,\n    updateTask,\n    deleteTask\n} from '../../../../../../../store/actions';\n\n\n\n\nconst HistoryModalContainer = props => {\n    const { taskForChange } = props;\n\n    return (\n        <HistoryModal {...props} />\n    )\n}\n\nconst mapState = state => ({\n    taskForChange: state.historyModal.taskForChange\n})\n\nconst mapDispatch = dispatch => ({\n    clearTaskForChange: zeroOut => dispatch(setTaskForChange(zeroOut)),\n    setTitle: title => dispatch(setHistTitle(title)),\n    setCost: cost => dispatch(setHistCOst(cost)),\n    setMark: mark => dispatch(setHistMark(mark)),\n    setModel: model => dispatch(setHistModel(model)),\n    setSide: side => dispatch(setHistSide(side)),\n    setSubWork: subWork => dispatch(setHistSubWork(subWork)),\n    addTask: id => dispatch(setHistTask(id)),\n    addSide: id => dispatch(addHistSide(id)),\n    addSubwork: id => dispatch(addHistSubWork(id)),\n    delSubWork: id => dispatch(delHistSubwork(id)),\n    delSide: id => dispatch(delHistSide(id)),\n    delTask: id => dispatch(delHistTask(id)),\n    updateTask: taskAndId => dispatch(updateTask(taskAndId)),\n    deleteTask: id => dispatch(deleteTask(id))\n})\n\nexport default connect(mapState, mapDispatch)(HistoryModalContainer)","import React, { useState } from 'react';\nimport stl from './HistoryWeekInfoModal.module.css'\n\nexport const CarsByWeek = props => {\n\n    const [isShowAllCars, setCars] = useState(false)\n    const { info } = props;\n    console.log(props)\n    return (\n        <>\n            <div className={stl.weekListItem}>\n                <span>Машин за неделю: </span>\n                <button onClick={()=> setCars(!isShowAllCars)}>{!isShowAllCars ? 'Раскрыть' : 'Скрыть'}</button>\n                <div className={stl.infoItemContanier}>\n                    <span className={stl.profit}>{info.carsCount} шт.</span>\n                </div>\n\n                {\n                    isShowAllCars && <div className={stl.allCarsContainer}>\n                        <ul className={stl.carList}>\n                            {\n                                info.carList && info.carList.map(item => {\n\n                                    return <li className={stl.listItem} key={item.date + item.car}>\n                                        <div className={stl.mark}>{item.car.trim() || 'Марка не указана'}</div>\n                                        <div className={stl.date}>{item.date}</div>\n                                        <div className={stl.cost}>{item.cost}</div>\n                                    </li>\n\n                                })\n                            }\n                        </ul>\n                    </div>\n                }\n\n            </div>\n           \n        </>\n    )\n}","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { HistoryDayMapping } from '../../HistoryTasksComponents/HistoryComponents/HistoryByDay/History';\nimport { CarsByWeek } from './CarsByWeekComponent';\nimport stl from './HistoryWeekInfoModal.module.css'\n\nexport const HistoryWeekDetailsModal = props => {\n    console.log(props)\n    const { info, setHistDetail } = props;\n    const [isShowDetails, setShowDetails] = useState(false)\n    return (\n        info\n        &&\n        <div className='modalWrapper fade'>\n            <div className='modalContainer'>\n                <div className={'headNav'}>\n                    <button onClick={() => setHistDetail(null)}>\n                        Закрыть\n                                </button>\n\n                </div>\n                <div className={stl.weekListItem}>\n                    <span>Прибыль за неделю:</span>\n\n                    <div className={stl.infoItemContanier}>\n                        <span className={stl.profit}>{`${info.info.sumCostByWeek} грн `}\n                            <span className={stl.percent}>\n                                <span className={stl.symbol}>ЗП</span>\n                                {`${info.info.withUserPercent} грн`}\n                            </span>\n                        </span>\n                    </div>\n                </div>\n                <CarsByWeek info={info.info} />\n\n                <div className={stl.weekListItem}>\n                    <span>Самая прибыльная машина:</span>\n                    <div className={stl.infoItemContanier}>\n                        <span className={stl.mVCar}> {`${info.info.mostProfitCarName}`}</span>\n                        <span className={stl.profit}>{`${info.info.mostProfitCarCost} грн `}\n\n                            <span className={stl.percent}>\n                                <span className={stl.symbol}>ЗП</span>\n                                {`${info.info.mostProfitCarWithPercent} грн`}\n                            </span>\n\n                        </span>\n                        <button\n                            className={stl.detailBtn}\n                            onClick={() => setShowDetails(!isShowDetails)}\n                        >\n                            {!isShowDetails ? 'Раскрыть' : 'Скрыть'}\n                        </button>\n                    </div>\n                    {\n                        isShowDetails && <div className={stl.topCarTasks} ><HistoryDayMapping tasks={info.info.mostProfitCarTasks} /></div>\n                    }\n                </div>\n\n\n\n                <span className='modalBottom'>\"ЗП\" - чистая прибыль посчитана в соответствии с указанным процентом на <Link to='/main'>главной странице </Link> </span>\n            </div>\n        </div>\n    )\n}","import React from 'react';\nimport {connect} from 'react-redux';\nimport {HistoryWeekDetailsModal} from './HistoryWeekInfoModal';\nimport {setHistoryDatails} from '../../../../../../../store/actions'\n\n\nconst WekInfoContainer = props => {\n    return <HistoryWeekDetailsModal {...props} />\n}\n\nconst mapState = state =>({\n    info: state.weekInfo.info\n})\n\nconst mapDispatch = dispatch =>({\n    setHistDetail: det=> dispatch(setHistoryDatails(det)),\n})\n\nexport default connect(mapState, mapDispatch)(WekInfoContainer);","import React from 'react';\nimport {Link, useRouteMatch, useLocation} from 'react-router-dom';\nimport stl from './History.module.css';\n\nexport const HistoryNavBar = props => {\n    const {match ,timeType} = props;\n\n    const x = useLocation();\n    return (\n        <div className={stl.navBar}>\n            <Link className={stl.navBarLink} to ={`${match}/day`} ><button className={timeType === 'day' ? `btn ${stl.navBarChecked}` : `btn` } >Все дни</button></Link>\n            <Link className={stl.navBarLink} to ={`${match}/week`} ><button className={timeType === 'week' ? `btn ${stl.navBarChecked}` : `btn` } >Недели</button></Link>\n            <Link className={stl.navBarLink} to ={`${match}/month`}><button className={timeType === 'month' ? `btn ${stl.navBarChecked}` : `btn` } >Месяцы</button></Link>\n        </div>\n    )\n}","import React, { useEffect, useState } from 'react';\nimport { useParams, useRouteMatch, Switch, Route,BrowserRouter, matchPath, useLocation } from 'react-router-dom'\nimport { History } from './HistoryByDay/History';\nimport { HistoryByWeek } from './HistoryByWeek/HistoryByWeek';\nimport {HistoryByMonth} from './HistoryByMonth/HistoryByMonth'\nimport HistoryModalContainer from '../HistoryModal/HistoryModalContainer';\nimport HistoryWeekDetailsModal from '../HistoryWeekInfoModal/HistoryWeekInfoModalContainer';\nimport { HistoryNavBar } from './HistoryNavBar';\nimport { Loader } from '../../../../Loader/Loader'\n\n\n\n// import History from './'\n\nexport const HistoryComponent = props => {\n\n    const [flag, setFlag] = useState('day');\n\n    \n    const match = useRouteMatch();\n\n    return (\n\n        <>\n            <HistoryNavBar match={match.url} timeType={flag} /> \n            {\n                !props.isFetching\n                    ?\n                    <Switch>\n                        <Route path={match.url+'/:id'} children={<HistoryAllocater {...props} setTimeType={setFlag} /> } />\n                        </Switch>\n\n\n                    :\n                    <Loader size={'m'} />\n            }\n            <HistoryModalContainer />\n            <HistoryWeekDetailsModal />\n        </>\n    )\n}\n\nconst HistoryAllocater = props => {\n    const {id} = useParams();\n    const match = useRouteMatch();\n    useEffect(()=>{\n        props.setTimeType(id)\n    })\n\n    return (\n        <Switch>\n            <Route path={`/history/day`}  exact>\n                <History {...props} path={id} />\n            </Route>\n\n            <Route path={`/history/week`}  exact>\n                <HistoryByWeek {...props} path={id} />\n            </Route>\n            <Route path={`/history/month`}  exact>\n                <HistoryByMonth {...props} path={id} />\n            </Route>\n        </Switch>\n    )\n}","import React, { useEffect,useState} from 'react';\nimport { HistoryComponent } from './HistoryComponents/HistoryComponent';\nimport { connect } from 'react-redux';\nimport { getTasks, updateTask, getTaskById, settingHistoryDetails, } from '../../../../../../store/actions';\n\n\nconst HistoryContainer = props => {\n    const [reqFlag, setReqFlag] = useState('')\n    useEffect(()=>{\n        reqFlag && props.getTasks(reqFlag);\n    },[reqFlag, props.haveBeenChanged])\n\n\n\n    //////\n\n// useEffect(()=>{\n//     const parseTasksByDate = (tasks) =>{\n//         const task = tasks && tasks.reduce((ac, cv, i, cArr)=>{\n//             const date = String(cv.date).slice(0,10);\n//             const nextCv = cArr[i+1];\n//             const nextDate = nextCv && String(cArr[i+1].date).slice(0,10);\n//             if(!i){\n//                 ac.collectDate = []\n//                 ac.prevDate = date;\n//                 ac.currDate = date;\n//                 ac.payload = [];\n                \n//                 ac.collectDate.push({date: cv.date, tasks: cv})\n//                 if(date !== nextDate){\n//                     ac.payload.push(ac.collectDate)\n//                 }\n//                 return ac;\n//             } else {\n//                 ac.currDate = date;\n//             }\n//             if( date !== nextDate && ac.prevDate !== date ){\n//                 // if(!ac.prevDate){\n//                 //     return ac\n//                 // }\n    \n    \n//                 ac.collectDate = [];\n//                 ac.collectDate.push({date: cv.date, tasks: cv});\n//                 ac.payload.push(ac.collectDate);\n//                 return ac\n    \n//             } else if( date !== nextDate){\n//                     if(!nextDate){\n//                         ac.collectDate.push({date: cv.date, tasks: cv});\n//                         ac.payload.push(ac.collectDate);\n\n//                         return ac;\n//                     }\n//                         ac.collectDate.push({date: cv.date, tasks: cv})\n//                         ac.payload.push(ac.collectDate);\n//                         return ac;\n    \n//                     } else if(( date === nextDate || !nextDate ) && ac.prevDate !== date){\n//                                 ac.collectDate = [];\n//                                 ac.collectDate.push({date: cv.date, tasks: cv});\n//                                 ac.prevDate = date;\n//                                 return ac;\n    \n//                             } else if( !nextDate && ac.prevDate === date  ){\n//                                         ac.collectDate.push({date: cv.date, tasks: cv});\n//                                         ac.payload.push(ac.collectDate);\n//                                         return ac;\n    \n//                                     } else if( ac.prevDate === date  ){\n//                                                 ac.collectDate.push({date: cv.date, tasks: cv});\n//                                                 return ac;\n    \n//                                             }\n//             ac.prevDate = date;\n//             return ac;\n//         },{})\n//         console.log(task)\n\n//         return task;\n//     }\n//     debugger\n//     parseTasksByDate(props.doneTasks && props.doneTasks.payload)\n// },[props.doneTasks])\n    \n\n\n    //////\n    const getRequestType = type => {\n        setReqFlag(type);\n    }\n    \n\n    return <HistoryComponent {...props} getRequestType={getRequestType} />\n}\n\nconst mapState = state => ({\n    tasks:state.tasks.choosedTasks,\n    doneTasks: state.history.doneTasks,\n    haveBeenChanged: state.historyModal.updatedTask,\n    isFetching: state.history.isFetchingHistoryPage\n});\n\nconst mapDispatch = dispatch => ({\n    getTasks: param => dispatch(getTasks(param)),\n    updateTask: task => dispatch(updateTask(task)),\n    getTaskById: id => dispatch(getTaskById(id)),\n    settingHistoryDetails: details => dispatch(settingHistoryDetails(details))\n});\nexport default connect(mapState,mapDispatch)(HistoryContainer);","import React, { useState } from 'react';\nimport stl from './MainPage.module.css';\n\n\nexport const MainPageModal = props => {\n    const { user } = props;\n    const [isShowPassInputs, setShowInputs] = useState(false);\n    \n    \n    const comparePass = () =>{\n        console.log('work', props)\n        const {pass} = props;\n        if(pass.pass1 === pass.pass2 && !pass.pass1.length){\n            return true\n        }\n        return pass.pass1 === pass.pass2 && pass.pass1.length >= 6;\n    }\n\n    return (\n        <div className={`modalWrapper fade`}>\n            <div style={{ display: \"flex\", flexDirection: 'column' }} className={`${stl.modalContainer} modalContainer `}>\n               \n                <span className={stl.title}>Название станции</span>\n                <input\n                    placeholder={user.workplaceName}\n                    name='workplaceName' type='text'\n                    onChange={(e) => props.changeUserInfo({ value: e.target.value, key: e.target.name })}\n                />\n                <span className={stl.title}>Процент</span>\n                <input\n                    placeholder={user.percentLevel}\n                    name='percentLevel' type='text'\n                    onChange={(e) => props.changeUserInfo({ value: e.target.value, key: e.target.name })}\n                />\n                <span className={stl.title}>Выплатная неделя</span>\n                <select\n                    defaultValue={user.paymentRange}\n                    name='paymentRange' type='text'\n                    onChange={(e) => props.changeUserInfo({ value: e.target.value, key: e.target.name })}\n                >\n                    <option name={'пн'}>пн-сб</option>\n                    <option name={'вт'}>вт-пн</option>\n                    <option name={'ср'}>ср-вт</option>\n                    <option name={'чт'}>чт-ср</option>\n                    <option name={'пт'}>пт-чт</option>\n                    <option name={'сб'}>сб-пн</option>\n                </select>\n                <span className={stl.title}>Email</span>\n                <input\n                    placeholder={user.email} name='email' type='email'\n                    onChange={(e) => props.changeUserInfo({ value: e.target.value, key: e.target.name })}\n                />\n                <label>\n                    <span className={stl.title}>Изменить пароль</span>\n                    <input type='checkbox' onClick={() => setShowInputs(!isShowPassInputs)} />\n                </label>\n                {\n                    isShowPassInputs\n                    &&\n                    <div className={stl.passContainer}>\n                    <span className={stl.title}>Старый пароль</span>\n                    <input\n                        type='password'\n                        placeholder={user.passWord}\n                        name='passWord'\n                        onChange={(e) => props.changeUserInfo({ value: e.target.value, key: e.target.name })}\n                    />\n                    <span className={stl.title}>Новый пароль</span>\n                    <input\n                        className={!comparePass() && stl.wrongNewPass}\n                        type='password'\n                        name='pass1'\n                        onChange={(e)=>{\n                            props.compPass(e.target);\n                            props.changeUserInfo({ value: e.target.value, key: e.target.name })\n                        }}\n                    />\n                    <span className={stl.title}>Новый пароль</span>\n                    <input \n                        className={!comparePass() && stl.wrongNewPass}\n                        type='password'\n                        name='pass2'\n                        onChange={(e)=>{\n                            props.compPass(e.target);\n                            props.changeUserInfo({ value: e.target.value, key: e.target.name })\n                        }}\n                    />\n\n                    </div>\n                }\n                <div className={stl.btnBlock}>\n                 <button \n                    className={`btn ${stl.modalCloseBtn}`}\n                    onClick={() => props.closeModal()}>\n                    закрыть\n                </button>\n                <button\n                    className={`btn`}\n                    onClick={() => { props.saveNewInfo(user) }}\n                    disabled={!comparePass()}\n                >\n                    Сохранить\n                </button>\n                </div>\n            </div>\n        </div>\n    )\n}","import React, {useEffect, useState} from 'react'\nimport {MainPageModal} from './MainPageModal';\nimport {connect} from 'react-redux';\nimport {changeUserInfo, changingUserInfo} from '../../../../../../store/actions'\n\nconst MainPageModalContainer = props => {\n\n    const [pass, setPass] = useState({pass1:'', pass2:''});\n    const passesHandler = Epass =>{\n        setPass({...pass, [Epass.name]:Epass.value});\n    }\n\n\n\n    return (\n        <MainPageModal {...props} compPass={passesHandler} pass={pass}/>\n    )\n    \n}\n\nconst mapState = state =>({\n    user: state.user,\n});\n\nconst mapDispatch = dispatch =>({\n    changeUserInfo: info => dispatch(changeUserInfo(info)),\n    saveNewInfo: info => dispatch(changingUserInfo(info))\n})\n\nexport default connect(mapState, mapDispatch)(MainPageModalContainer)\n\n","import React,{useState} from 'react';\nimport stl from './MainPage.module.css';\nimport MainPageModalContainer from './MainPageModalContainer'\nimport { Loader } from '../../../Loader/Loader';\n\nexport const MainPage = props => {\n    const { userInfo, userFetching } = props;\n    const [showModal, setModal] = useState(false);\n\n    return (\n        <div className={stl.container}>\n            {\n                !userFetching\n                ?\n                <div className={stl.infoContainer}>\n                    <div className={stl.info}>\n\n                        <span>Почта</span>\n                        <p className={stl.infoItem}>{userInfo.email}</p>\n\n                        <span>Название станции</span>\n                        <p className={stl.infoItem}>{userInfo.workplaceName}</p>\n\n                        <span>Процент</span>\n                        <p className={stl.infoItem}>{userInfo.percentLevel + ' %'}</p>\n                        \n                        <span>Выплатная неделя</span>\n                        <p className={stl.infoItem}>{ userInfo.paymentRange }</p>\n                        \n                    </div>\n\n                        { showModal && <MainPageModalContainer closeModal={()=>setModal(false)}/> }\n                    <button onClick={()=>setModal(true)}> {'Редактировать данные'}</button>\n                </div>\n                :\n                <Loader size='l'/>\n            }\n        </div>\n    )\n}","import React, { useEffect } from 'react';\nimport {MainPage} from './MainPage';\nimport {connect} from 'react-redux';\nimport {gettingUserInfo} from '../../../../../../store/actions'\n\nconst MainPageContainer = props => {\n    useEffect(()=>{\n        props.getUserInfo()\n    },[])\n    return <MainPage {...props}/>\n}\n\nconst mapDispatch = dispatch=>({\n    getUserInfo: ()=>dispatch(gettingUserInfo())\n})\n\nconst mapState = state =>({\n    userInfo: state.user,\n    userFetching: state.user.isFetching,\n})\n\nexport default connect (mapState, mapDispatch )(MainPageContainer)","import React, { useEffect } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport AuthPage from '../pages/AuthPage/AuthContainer';\nimport HeaderContainer from '../pages/MainPage/Components/Header/HeaderContainer';\nimport ContentContainer from '../pages/MainPage/Components/Content/ContentContainer';\nimport CreateTaskContainer  from '../pages/MainPage/Components/Content/ComponentsByContent/CreateTasksComponents/CreateTaskContainer'\nimport HistoryContainer from '../pages/MainPage/Components/Content/ComponentsByContent/HistoryTasksComponents/HistoryContainer'\n// import { Footer } from '../pages/MainPage/Components/Footer/Footer';\nimport  ModalContainer  from '../pages/MainPage/Components/Modal/ModalContainer'\nimport  MainPageContainer from '../pages/MainPage/Components/Content/ComponentsByContent/MainPageTasksComponents/MainPageContainer';\n\n\nexport const Router = (props) => {\n    if (!props.token || !props.hideAuth) {\n        return (\n            <Switch>\n                <Route path='/' >\n                    <AuthPage />\n                </Route>\n            </Switch>\n        )\n    }\n    return (\n        <>\n            <HeaderContainer />\n            <ContentContainer>\n                <Route exact path='/'> \n                    <Redirect to='/main' />\n                </Route>\n                <Switch>\n                    <Route exact path='/main'>\n                        <MainPageContainer />\n                    </Route>\n\n                    <Route path='/newtask'>\n                        <CreateTaskContainer />\n                    </Route>\n                    <Route path='/history'>\n                        <HistoryContainer />\n                    </Route>\n                </Switch>\n                {\n                    (props.isShowModal || props.isShowInfoModal)\n                    && <ModalContainer \n                        {...props.message}\n                        message={props.logoutMessage ||props.infoMessage}\n                        okButton={!props.infoMessage && props.okHandler}\n                    />\n                }\n            </ContentContainer >\n            {/* <Footer /> */}\n\n\n        </>\n    )\n\n}","import React, {useEffect} from 'react';\nimport {Router} from './routes';\nimport {connect} from 'react-redux';\nimport {saveToLocalStorage} from '../store/actions/localStorageActions';\nimport { logout,logoutModal,logoutCloseModal,infoModal, infoCloseModal } from '../store/actions';\nimport { localStorageToken } from '../configs/config'\nimport {httpRequest} from '../utils/API';\n\nconst RouterContainer = props => {\n    useEffect(()=>{\n        props.saveToLocalStor();\n\n        httpRequest.interceptors.request.use(cfg=>{\n            const token = localStorage.getItem(localStorageToken);\n            if (token) {\n                cfg.headers.Authorization = `Bearer ${token}`\n            }\n            return cfg\n        },\n        err=>{\n            return Promise.reject(err)\n        }\n\n        )\n        httpRequest.interceptors.response.use(resolve=>{\n            console.log(resolve)\n            if(resolve.data.message){\n                props.infoModal(resolve.data.message)\n\n                setTimeout(() => {\n                    props.infoCloseModal()\n                }, (4000));\n            }\n            return resolve\n        },\n        err=>{\n            console.log(err.response)\n            if(err.response && err.response.status === 401){\n                props.logoutShowModal(err.response.data);\n            }\n            return Promise.reject(err);\n        \n        })\n\n    },[props]);\n\n\n    \n    return(\n        <Router\n            {...props}\n            hideAuth={localStorage.getItem(localStorageToken)} \n            okHandler ={()=>{props.logout(); props.logoutHideModal()}} />\n    )\n}\n\nconst mapDispatch = dispatch => ({\n    saveToLocalStor: ()=> dispatch(saveToLocalStorage()),\n    logout: () => dispatch(logout()),\n    logoutShowModal: message => dispatch(logoutModal(message)),\n    logoutHideModal: () => dispatch(logoutCloseModal()),\n    infoModal: message => dispatch(infoModal(message)),\n    infoCloseModal: () => dispatch(infoCloseModal())\n})\nconst mapState = state => ({\n    token: state.auth.token,\n    isShowModal: state.auth.isModal,\n    logoutMessage: state.auth.modalMsg.message,\n    isShowInfoModal: state.global.infoShow,\n    infoMessage: state.global.infoMessage\n})\n\nexport default connect(mapState, mapDispatch)(RouterContainer)","import {\n    SET_TOKEN,\n    START_REQUEST,\n    END_REQUEST,\n    ERROR_REQUEST,\n    REGISTRATION_SUCCESSFULL,\n    REGISTRATION_FAILURE,\n    SAVE_LOCAL_STORAGE,\n    DELETE_TOKEN,\n    SHOW_MODAL_LOGOUT,\n    HIDE_MODAL_LOGOUT\n} from '../actionTypes'\n\nimport {localStorageToken,localStorageUserId} from '../../configs/config';\n\nconst initState = {\n    token: null,\n    userId: null,\n    isFetching: false,\n    error: null,\n    message: '',\n    isModal:false,\n    modalMsg: ''\n}\n\n\nexport const auth = (state = initState, action) => {\n    const { type, payload } = action;\n    switch (type) {\n\n        case SET_TOKEN:\n            if( payload.token ) {\n                localStorage.setItem(localStorageToken, payload.token);\n                localStorage.setItem(localStorageUserId, payload.userId);\n            }\n            return { ...state, token: payload.token, userId: payload.userId, message: 'Вы успешно вошли' };\n\n\n        case START_REQUEST:\n            return { ...state, isFetching: true };\n\n        case END_REQUEST:\n            return { ...state, isFetching: false };\n\n        case ERROR_REQUEST:\n            return { ...state, error: true, message: 'Что-то пошло не так' };\n\n        case REGISTRATION_SUCCESSFULL:\n            return { ...state, message: 'Регистрация успешна' };\n\n        case REGISTRATION_FAILURE:\n            return { ...state, message: 'Регистрация не удалась' };\n\n        case SAVE_LOCAL_STORAGE:\n            if( localStorage.getItem(localStorageToken) ){\n                return { ...state,  token: localStorage.getItem(localStorageToken)}\n            }\n            return{...state}\n        case DELETE_TOKEN:\n            localStorage.removeItem(localStorageToken)\n            window.location.reload(null);\n            return {...state, token: null};\n\n        case SHOW_MODAL_LOGOUT:\n            return {...state, isModal: true, modalMsg: payload};\n        case HIDE_MODAL_LOGOUT: \n            return {...state, isModal: false}\n\n        default:\n            return { ...state }\n    }\n}","import {\n    SET_MARK_OF_AUTO_LIST,\n    SET_MODEL_BY_MARK,\n    START_REQUEST, \n    END_REQUEST,\n    SET_CURRENT_MODEL,\n    SET_CURRENT_MARK,\n\n} from '../actionTypes'\n\nconst initState = {\n    automobiles:'',\n    currentMark:'',\n    checkedMark:'',\n    checkedModel:'',\n\n    isFetching:false,\n}\n\nexport const marks = (state = initState, action) => {\n    const { type, payload } = action;\n    switch(type) {\n        case SET_MARK_OF_AUTO_LIST:\n            return {...state, automobiles: payload};\n        case SET_MODEL_BY_MARK:\n            return {...state, currentMark: payload};\n        case START_REQUEST:\n            return {...state, isFetching: true}\n        case END_REQUEST:\n            return {...state, isFetching: false}\n        case SET_CURRENT_MODEL:\n            return {...state, checkedMark: payload}\n        case SET_CURRENT_MARK:\n            return {...state, checkedModel: payload}\n        default:\n            return {...state}\n    }\n}","import {\n    SHOW_MODAL_GLOB,\n    HIDE_MODAL_GLOB,\n    SHOW_MODAL_INFO,\n    HIDE_MODAL_INFO,\n    SET_TASK_MENU_TITLE,\n\n} from '../actionTypes'\n\nconst initState  = {\n    isShowModalGlob: false,\n    message: 'Пустые поля',\n    description: 'Надо выбрать работы',\n    \n    infoMessage: null,\n    infoShow: false,\n\n    taskMenuTitle: '',\n\n}\n\nexport const global = (state = initState, action) => {\n    const {type, payload} = action;\n\n    switch(type){\n        case SHOW_MODAL_GLOB:\n            return {...state, isShowModalGlob: true};\n\n        case HIDE_MODAL_GLOB:\n            return {...state, isShowModalGlob: false};\n\n        case SHOW_MODAL_INFO:\n            return {...state, infoMessage: payload, infoShow: true,}\n\n        case HIDE_MODAL_INFO:\n            return {...state, infoMessage: null, infoShow: false}\n        case SET_TASK_MENU_TITLE:\n            return {...state, taskMenuTitle: payload}\n        default :\n            return {...state}\n    }\n}","import {\n    SET_TASK_FOR_CHANGE,\n    H_SET_COST,\n    H_SET_DATE,\n    H_SET_MARK,\n    H_SET_MODEL,\n    H_SET_SIDE,\n    H_SET_TITLE,\n    H_SET_SUBWORK,\n    H_ADD_TASK,\n    H_ADD_SIDE,\n    H_DELETE_SIDE,\n    H_ADD_SUBWORK,\n    H_DELETE_SUBWORK,\n    H_DELETE_TASK,\n    H_UPDATE_RESP,\n\n} from '../actionTypes'\nimport { tasks } from './taskHandling';\n\n\nconst initState = {\n    taskForChange: null,\n    updatedTask: null,\n}\n\n\n\nexport const historyModal = (state = initState, action) => {\n    const { payload, type } = action;\n    switch (type) {\n\n        case SET_TASK_FOR_CHANGE:\n            return { ...state, taskForChange: payload };\n\n        case H_SET_TITLE:\n            return {\n                ...state,\n                taskForChange: {\n                    ...state.taskForChange, tasks: {\n                        ...state.taskForChange.tasks, data: {\n                            ...state.taskForChange.tasks.data, tasks: [\n                                ...state.taskForChange.tasks.data.tasks.map(item => {\n                                    if (item.id === payload.id) {\n                                        return { ...item, title: payload.value }\n                                    }\n                                    return { ...item };\n                                })\n                            ]\n                        }\n                    }\n                }\n            }\n\n        case H_SET_COST:\n            if( typeof +payload.value !== 'number' ){\n                return {...state}\n            }\n            \n            return {\n                ...state,\n                taskForChange: {\n                    ...state.taskForChange, tasks: {\n                        ...state.taskForChange.tasks, data: {\n                            ...state.taskForChange.tasks.data, \n                                totalCost: state.taskForChange.tasks.data.tasks.reduce((acc, item)=>{\n                                    if(item.id === payload.id){\n                                        return acc += +payload.value\n                                    }\n                                    return acc += +item.cost\n                                },0),\n                                tasks: [\n                                ...state.taskForChange.tasks.data.tasks.map(item => {\n                                    if (item.id === payload.id) {\n                                        return { ...item, cost: payload.value }\n                                    }\n                                    return { ...item };\n                                })\n                            ]\n                        }\n                    }\n                }\n            }\n\n        case H_SET_MODEL:\n            return {\n                ...state,\n                taskForChange: {\n                    ...state.taskForChange, tasks: {\n                        ...state.taskForChange.tasks, data: {\n                            ...state.taskForChange.tasks.data, model: payload\n                        }\n                    }\n                }\n            }\n\n        case H_SET_MARK:\n            return {\n                ...state,\n                taskForChange: {\n                    ...state.taskForChange, tasks: {\n                        ...state.taskForChange.tasks, data: {\n                            ...state.taskForChange.tasks.data, mark: payload\n                        }\n                    }\n                }\n            }\n        case H_SET_SIDE:\n            return {\n                ...state,\n                taskForChange: {\n                    ...state.taskForChange, tasks: {\n                        ...state.taskForChange.tasks, data: {\n                            ...state.taskForChange.tasks.data, tasks: [\n                                ...state.taskForChange.tasks.data.tasks.map(item => {\n                                    if (item.id === payload.id) {\n                                        return {\n                                            ...item, names: item.names.map((nameItem, i) => {\n                                                if (i !== payload.i) {\n                                                    return { ...nameItem }\n                                                }\n                                                return { ...nameItem, side: payload.value }\n                                            })\n                                        }\n                                    }\n                                    return { ...item };\n                                })\n                            ]\n                        }\n                    }\n                }\n            }\n\n        case H_SET_SUBWORK:\n            return {\n                ...state,\n                taskForChange: {\n                    ...state.taskForChange, tasks: {\n                        ...state.taskForChange.tasks, data: {\n                            ...state.taskForChange.tasks.data, tasks: [\n                                ...state.taskForChange.tasks.data.tasks.map(item => {\n                                    if (item.id === payload.id) {\n                                        return {\n                                            ...item, names: item.names.map((nameItem, i) => {\n                                                if (i !== payload.i) {\n                                                    return { ...nameItem };\n                                                }\n                                                if (nameItem.subWork) {\n                                                    return {\n                                                        ...nameItem, subWork: nameItem.subWork.map((subItem, i) => {\n                                                            if (i !== payload.subI) {\n                                                                return { ...subItem }\n                                                            }\n                                                            return { ...subItem, name: payload.value }\n                                                        })\n                                                    }\n                                                }\n                                                return { ...nameItem };\n                                            })\n                                        }\n                                    }\n                                    return { ...item };\n                                })\n                            ]\n                        }\n                    }\n                }\n            }\n\n        case H_ADD_TASK:\n            return {\n                ...state,\n                taskForChange: {\n                    ...state.taskForChange, tasks: {\n                        ...state.taskForChange.tasks, data: {\n                            ...state.taskForChange.tasks.data, tasks: [\n                                ...state.taskForChange.tasks.data.tasks, {\n                                    title: '',\n                                    cost: '',\n                                    id: payload.id,\n                                    canBeHideTitle: false,\n                                    names: [{ side: 'Новый', id: payload.newId }]\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n\n        case H_ADD_SIDE:\n            return {\n                ...state,\n                taskForChange: {\n                    ...state.taskForChange, tasks: {\n                        ...state.taskForChange.tasks, data: {\n                            ...state.taskForChange.tasks.data, tasks: [\n                                ...state.taskForChange.tasks.data.tasks.map(item => {\n                                    if (item.id === payload.id) {\n                                        return { ...item, names: [...item.names, { side: 'Новый', id: payload.newId }] }\n                                    }\n                                    return { ...item };\n                                })\n                            ]\n                        }\n                    }\n                }\n            }\n\n        case H_DELETE_SIDE:\n            return {\n                ...state,\n                taskForChange: {\n                    ...state.taskForChange, tasks: {\n                        ...state.taskForChange.tasks, data: {\n                            ...state.taskForChange.tasks.data, tasks: [\n                                ...state.taskForChange.tasks.data.tasks.map(item => {\n                                    if (item.id === payload.id) {\n                                        const x = item.names.filter((fItem, i) => i !== payload.i)\n                                        return { ...item, names: x }\n                                    }\n                                    return { ...item };\n                                })\n                            ]\n                        }\n                    }\n                }\n            }\n\n        case H_ADD_SUBWORK:\n            return {\n                ...state,\n                taskForChange: {\n                    ...state.taskForChange, tasks: {\n                        ...state.taskForChange.tasks, data: {\n                            ...state.taskForChange.tasks.data, tasks: [\n                                ...state.taskForChange.tasks.data.tasks.map(item => {\n                                    if (item.id === payload.id) {\n                                        return {\n                                            ...item, names: item.names.map((nameItem, i) => {\n                                                if (nameItem.id !== payload.nameId) {\n                                                    return { ...nameItem };\n                                                }\n                                                if (nameItem.subWork) {\n                                                    return { ...nameItem, subWork: [...nameItem.subWork, {name:'', id: payload.newId}] }\n                                                } else {\n                                                    return { ...nameItem, subWork: [{name:'', id: payload.newId}] }\n                                                }\n                                            })\n                                        }\n                                    }\n                                    return { ...item };\n                                })\n                            ]\n                        }\n                    }\n                }\n            }\n\n        case H_DELETE_SUBWORK:\n            return {\n                ...state,\n                taskForChange: {\n                    ...state.taskForChange, tasks: {\n                        ...state.taskForChange.tasks, data: {\n                            ...state.taskForChange.tasks.data, tasks: [\n                                ...state.taskForChange.tasks.data.tasks.map(item => {\n                                    if (item.id === payload.id) {\n                                        return {\n                                            ...item, names: item.names.map((nameItem, i) => {\n                                                if (nameItem.id !== payload.nameId) {\n                                                    return { ...nameItem };\n                                                }\n                                                if (nameItem.subWork) {\n\n                                                    if(nameItem.subWork.length === 1){\n                                                        delete nameItem.subWork\n                                                        return {...nameItem}\n                                                    }\n                                                    return {\n                                                        ...nameItem, subWork: nameItem.subWork.filter((swItem, i) => {\n                                                            return i !== payload.i\n                                                        })\n                                                    }\n                                                }\n                                            })\n                                        }\n                                    }\n                                    return { ...item };\n                                })\n                            ]\n                        }\n                    }\n                }\n            }\n\n        case H_DELETE_TASK:\n            return {\n                ...state,\n                taskForChange: {\n                    ...state.taskForChange, tasks:{\n                        ...state.taskForChange.tasks, data: {\n                            ...state.taskForChange.tasks.data, \n                            tasks: state.taskForChange.tasks.data.tasks.filter(tItem=>tItem.id !== payload.id)\n                        }\n                    }\n                }\n            }\n\n        case H_UPDATE_RESP:\n            return {...state, updatedTask: payload}\n\n\n       \n        default:\n            return { ...state }\n    }\n}\n\n","import {\n    // SET_TASK_FOR_CHANGE,\n    GET_DONE_TASKS,\n    H_SET_FETCHING,\n} from '../actionTypes';\n\n\n\nconst initState = {\n    isFetchingHistoryPage: false,\n    doneTasks: null,\n}\n\nexport const history = (state = initState, action) => {\n    const {type, payload} = action;\n    switch(type){\n        case GET_DONE_TASKS:\n            return {...state, doneTasks: payload };\n        case H_SET_FETCHING:\n            return {...state, isFetchingHistoryPage:payload};\n        default :\n            return {...state}\n    }\n}","import {\n    USER_FETCHING,\n    GET_USER_INFO,\n    SET_UPDATED_USER_INFO,\n} from '../actionTypes'\n\n\nconst initState = {\n    email:'',\n    paymentDay: '',\n    percentLevel:'',\n    workplaceName:'',\n    isFetching: false,\n\n}\nexport const user = (state = initState, action) => {\n    const {type, payload} = action;\n    switch(type){\n        case GET_USER_INFO:\n            return {...state, \n                    email: payload.email,\n                    paymentDay: payload.paymentDay,\n                    percentLevel: payload.percentLevel,\n                    workplaceName: payload.workplaceName,\n                    paymentRange: payload.paymentRange\n\n                }\n        case USER_FETCHING:\n            return {...state ,isFetching: payload};\n\n        case SET_UPDATED_USER_INFO:\n            // ????????????????????????????? приведенеи типов\n            return {...state, [payload.key]: payload.value}\n        default:\n            return{...state, }\n    }\n\n}","import { H_D_SET_DETAILS } from \"../actionTypes\";\n\nconst initState = {\n    info: null,\n\n}\n\nexport const weekInfo = (state = initState, action) => {\n    const { payload, type } = action;\n\n    switch(type) {\n        case H_D_SET_DETAILS:\n            return { ...state, info: payload}  \n        default: \n            return { ...state };           \n    }\n}","import {combineReducers} from 'redux';\nimport {auth} from './reducers/authHandling';\nimport {tasks} from './reducers/taskHandling';\nimport {marks} from './reducers/automobileListHandling';\nimport {global} from './reducers/commonHandlings';\nimport {historyModal} from './reducers/historyModalHandling';\nimport {history} from './reducers/historyHandling';\nimport {user} from './reducers/userHandling';\nimport {weekInfo} from './reducers/historyWeekInfoModal'\n\n\nexport default combineReducers({\n    auth,\n    tasks,\n    marks,\n    global,\n    history,\n    historyModal,\n    user,\n    weekInfo\n})","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport  Router  from './routes/RouterContainer';\nimport { createStore, applyMiddleware, } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\nimport reducer from './store'\nimport './App.css';\n\nconst store = createStore(\n  reducer, composeWithDevTools( applyMiddleware(thunk))\n)\n\nfunction App() {\n\n  return (\n      <Provider store={store} >\n          <BrowserRouter>\n              <Router />\n          </BrowserRouter>\n      </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}